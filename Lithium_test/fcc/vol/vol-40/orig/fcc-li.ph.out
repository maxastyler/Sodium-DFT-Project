
     Program PHONON v.5.2.0 starts on  3Jun2016 at 16:16: 4 

     This program is part of the open-source Quantum ESPRESSO suite
     for quantum simulation of materials; please cite
         "P. Giannozzi et al., J. Phys.:Condens. Matter 21 395502 (2009);
          URL http://www.quantum-espresso.org", 
     in publications or presentations arising from this work. More details at
     http://www.quantum-espresso.org/quote

     Parallel version (MPI), running on   384 processors
     K-points division:     npool     =     384

     Reading data from directory:
     ./tmp/li-fcc.save

   Info: using nr1, nr2, nr3 values from input

   Info: using nr1, nr2, nr3 values from input

     IMPORTANT: XC functional enforced from input :
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)
     Any further DFT definition will be discarded
     Please, verify this is what you really want

 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19795     6879    1411
 


     Dynamical matrices for ( 8, 8, 8)  uniform grid of q-points
     (  29q-points):
       N         xq(1)         xq(2)         xq(3) 
       1   0.000000000   0.000000000   0.000000000
       2  -0.125000000   0.125000000  -0.125000000
       3  -0.250000000   0.250000000  -0.250000000
       4  -0.375000000   0.375000000  -0.375000000
       5   0.500000000  -0.500000000   0.500000000
       6   0.000000000   0.250000000   0.000000000
       7  -0.125000000   0.375000000  -0.125000000
       8  -0.250000000   0.500000000  -0.250000000
       9   0.625000000  -0.375000000   0.625000000
      10   0.500000000  -0.250000000   0.500000000
      11   0.375000000  -0.125000000   0.375000000
      12   0.250000000   0.000000000   0.250000000
      13   0.000000000   0.500000000   0.000000000
      14  -0.125000000   0.625000000  -0.125000000
      15   0.750000000  -0.250000000   0.750000000
      16   0.625000000  -0.125000000   0.625000000
      17   0.500000000   0.000000000   0.500000000
      18   0.000000000   0.750000000   0.000000000
      19   0.875000000  -0.125000000   0.875000000
      20   0.750000000   0.000000000   0.750000000
      21   0.000000000  -1.000000000   0.000000000
      22  -0.250000000   0.500000000   0.000000000
      23   0.625000000  -0.375000000   0.875000000
      24   0.500000000  -0.250000000   0.750000000
      25   0.750000000  -0.250000000   1.000000000
      26   0.625000000  -0.125000000   0.875000000
      27   0.500000000   0.000000000   0.750000000
      28  -0.250000000  -1.000000000   0.000000000
      29  -0.500000000  -1.000000000   0.000000000

     Calculation of q =    0.0000000   0.0000000   0.0000000

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000   0.0000000   0.0000000 )
 
     49 Sym.Ops. (with q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points=  2030  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, O_h (m-3m)  point group:


     Atomic displacements:
     There are   1 irreducible representations

     Representation     1      3 modes -T_1u G_15  G_4-  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :    14.89s CPU        36.02s WALL



     Representation #  1 modes #   1  2  3

     Self-consistent Calculation
 
     Pert. #  1: Fermi energy shift (Ry) =     1.0878E-25     1.5673E-37
     Pert. #  2: Fermi energy shift (Ry) =    -6.8528E-26    -9.9917E-38
     Pert. #  3: Fermi energy shift (Ry) =     6.6239E-26    -1.1755E-37

      iter #   1 total cpu time :    36.9 secs   av.it.:   5.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.284E-07
 
     Pert. #  1: Fermi energy shift (Ry) =     6.8932E-26     6.1224E-41
     Pert. #  2: Fermi energy shift (Ry) =    -3.2312E-26     9.9488E-41
     Pert. #  3: Fermi energy shift (Ry) =     3.6189E-25    -1.5306E-40

      iter #   2 total cpu time :    39.2 secs   av.it.:   9.4
      thresh= 3.583E-05 alpha_mix =  0.700 |ddv_scf|^2 =  7.820E-09
 
     Pert. #  1: Fermi energy shift (Ry) =    -4.3082E-26     3.0612E-41
     Pert. #  2: Fermi energy shift (Ry) =     6.4623E-27     4.9744E-41
     Pert. #  3: Fermi energy shift (Ry) =    -1.7233E-26    -7.6530E-41

      iter #   3 total cpu time :    43.2 secs   av.it.:   9.6
      thresh= 8.843E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.870E-11
 
     Pert. #  1: Fermi energy shift (Ry) =    -1.6371E-25    -7.6530E-42
     Pert. #  2: Fermi energy shift (Ry) =    -8.5088E-26    -1.4349E-42
     Pert. #  3: Fermi energy shift (Ry) =    -2.5849E-26    -8.6096E-42

      iter #   4 total cpu time :    45.2 secs   av.it.:   9.1
      thresh= 6.221E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.045E-13
 
     Pert. #  1: Fermi energy shift (Ry) =    -1.7233E-26     2.3915E-43
     Pert. #  2: Fermi energy shift (Ry) =    -6.2469E-26    -1.4648E-42
     Pert. #  3: Fermi energy shift (Ry) =     1.7233E-26    -4.7831E-43

      iter #   5 total cpu time :    47.3 secs   av.it.:   8.3
      thresh= 3.233E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.293E-15
 
     Pert. #  1: Fermi energy shift (Ry) =    -8.6165E-26    -2.2720E-42
     Pert. #  2: Fermi energy shift (Ry) =    -2.2618E-26     1.8236E-42
     Pert. #  3: Fermi energy shift (Ry) =     0.0000E+00    -2.3915E-43

      iter #   6 total cpu time :    56.5 secs   av.it.:   8.5
      thresh= 4.788E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.884E-19

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    1
     List of q in the star:
          1   0.000000000   0.000000000   0.000000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000   0.000000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       0.116327 [THz] =       3.880265 [cm-1]
     freq (    2) =       0.116327 [THz] =       3.880265 [cm-1]
     freq (    3) =       0.116327 [THz] =       3.880265 [cm-1]
 **************************************************************************

     Mode symmetry, O_h (m-3m)  point group:

     freq (  1 -  3) =          3.9  [cm-1]   --> T_1u G_15  G_4- I  

     Calculation of q =   -0.1250000   0.1250000  -0.1250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19795     6879    1459
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 15.0

     total cpu time spent up to now is        9.7 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.1250000   0.1250000  -0.1250000 )
 
      6 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_3v (3m)   point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  L_1  To be done

     Representation     2      2 modes -E    L_3  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  1m 0.20s CPU     1m36.28s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :    97.3 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.036E-01

      iter #   2 total cpu time :   100.0 secs   av.it.:   8.0
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  9.040E+01

      iter #   3 total cpu time :   112.4 secs   av.it.:   8.0
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.373E-04

      iter #   4 total cpu time :   128.2 secs   av.it.:   4.9
      thresh= 2.715E-03 alpha_mix =  0.700 |ddv_scf|^2 =  3.987E-08

      iter #   5 total cpu time :   138.7 secs   av.it.:   8.3
      thresh= 1.997E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.543E-10

      iter #   6 total cpu time :   141.1 secs   av.it.:   8.7
      thresh= 2.131E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.604E-10

      iter #   7 total cpu time :   154.1 secs   av.it.:   5.7
      thresh= 1.614E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.183E-09

      iter #   8 total cpu time :   156.4 secs   av.it.:   5.7
      thresh= 5.642E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.248E-13

      iter #   9 total cpu time :   158.1 secs   av.it.:   7.3
      thresh= 6.518E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.013E-13

      iter #  10 total cpu time :   162.6 secs   av.it.:   7.0
      thresh= 3.182E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.636E-14

      iter #  11 total cpu time :   163.8 secs   av.it.:   6.2
      thresh= 1.279E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.063E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   168.1 secs   av.it.:   5.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.915E-07

      iter #   2 total cpu time :   173.2 secs   av.it.:   9.4
      thresh= 5.399E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.771E-08

      iter #   3 total cpu time :   176.5 secs   av.it.:   9.5
      thresh= 1.331E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.830E-11

      iter #   4 total cpu time :   180.8 secs   av.it.:   9.1
      thresh= 9.915E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.309E-13

      iter #   5 total cpu time :   189.1 secs   av.it.:   8.8
      thresh= 4.805E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.945E-15

      iter #   6 total cpu time :   191.8 secs   av.it.:   8.3
      thresh= 7.032E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.321E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    8
     List of q in the star:
          1  -0.125000000   0.125000000  -0.125000000
          2   0.125000000  -0.125000000  -0.125000000
          3   0.125000000  -0.125000000   0.125000000
          4  -0.125000000   0.125000000   0.125000000
          5   0.125000000   0.125000000  -0.125000000
          6  -0.125000000  -0.125000000  -0.125000000
          7  -0.125000000  -0.125000000   0.125000000
          8   0.125000000   0.125000000   0.125000000

     Diagonalizing the dynamical matrix

     q = (   -0.125000000   0.125000000  -0.125000000 ) 

 **************************************************************************
     freq (    1) =       1.469909 [THz] =      49.030887 [cm-1]
     freq (    2) =       1.469909 [THz] =      49.030887 [cm-1]
     freq (    3) =       4.313218 [THz] =     143.873467 [cm-1]
 **************************************************************************

     Mode symmetry, C_3v (3m)   point group:

     freq (  1 -  2) =         49.0  [cm-1]   --> E    L_3           
     freq (  3 -  3) =        143.9  [cm-1]   --> A_1  L_1           

     Calculation of q =   -0.2500000   0.2500000  -0.2500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    169                19795     6879    1471
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 15.0

     total cpu time spent up to now is       32.3 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.2500000   0.2500000  -0.2500000 )
 
      6 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_3v (3m)   point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  L_1  To be done

     Representation     2      2 modes -E    L_3  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  2m52.21s CPU     3m46.13s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   227.2 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.225E-03

      iter #   2 total cpu time :   241.0 secs   av.it.:   7.8
      thresh= 3.500E-03 alpha_mix =  0.700 |ddv_scf|^2 =  4.453E-02

      iter #   3 total cpu time :   243.8 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  8.873E-08

      iter #   4 total cpu time :   247.6 secs   av.it.:   8.9
      thresh= 2.979E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.405E-09

      iter #   5 total cpu time :   250.4 secs   av.it.:   8.9
      thresh= 6.637E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.118E-10

      iter #   6 total cpu time :   252.0 secs   av.it.:   8.1
      thresh= 1.057E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.257E-13

      iter #   7 total cpu time :   253.9 secs   av.it.:   9.6
      thresh= 4.751E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.758E-14

      iter #   8 total cpu time :   256.7 secs   av.it.:   8.4
      thresh= 1.326E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.340E-14

      iter #   9 total cpu time :   266.2 secs   av.it.:   6.9
      thresh= 1.158E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.583E-14

      iter #  10 total cpu time :   269.7 secs   av.it.:   6.6
      thresh= 1.258E-08 alpha_mix =  0.700 |ddv_scf|^2 =  8.063E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   275.0 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.979E-07

      iter #   2 total cpu time :   277.8 secs   av.it.:   9.5
      thresh= 5.458E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.799E-08

      iter #   3 total cpu time :   281.6 secs   av.it.:   9.6
      thresh= 1.341E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.214E-10

      iter #   4 total cpu time :   285.0 secs   av.it.:   9.1
      thresh= 1.102E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.269E-13

      iter #   5 total cpu time :   288.1 secs   av.it.:   9.0
      thresh= 4.763E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.591E-15

      iter #   6 total cpu time :   293.1 secs   av.it.:   8.1
      thresh= 6.776E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.531E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    8
     List of q in the star:
          1  -0.250000000   0.250000000  -0.250000000
          2   0.250000000  -0.250000000  -0.250000000
          3   0.250000000  -0.250000000   0.250000000
          4  -0.250000000   0.250000000   0.250000000
          5   0.250000000   0.250000000  -0.250000000
          6  -0.250000000  -0.250000000  -0.250000000
          7  -0.250000000  -0.250000000   0.250000000
          8   0.250000000   0.250000000   0.250000000

     Diagonalizing the dynamical matrix

     q = (   -0.250000000   0.250000000  -0.250000000 ) 

 **************************************************************************
     freq (    1) =       2.751455 [THz] =      91.778669 [cm-1]
     freq (    2) =       2.751455 [THz] =      91.778669 [cm-1]
     freq (    3) =       8.552735 [THz] =     285.288534 [cm-1]
 **************************************************************************

     Mode symmetry, C_3v (3m)   point group:

     freq (  1 -  2) =         91.8  [cm-1]   --> E    L_3           
     freq (  3 -  3) =        285.3  [cm-1]   --> A_1  L_1           

     Calculation of q =   -0.3750000   0.3750000  -0.3750000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 15.0

     total cpu time spent up to now is       48.5 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.3750000   0.3750000  -0.3750000 )
 
      6 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_3v (3m)   point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  L_1  To be done

     Representation     2      2 modes -E    L_3  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  4m15.37s CPU     5m17.90s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   318.9 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.942E-05

      iter #   2 total cpu time :   327.3 secs   av.it.:   8.5
      thresh= 8.912E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.899E-04

      iter #   3 total cpu time :   337.9 secs   av.it.:   7.0
      thresh= 1.703E-03 alpha_mix =  0.700 |ddv_scf|^2 =  6.139E-08

      iter #   4 total cpu time :   339.4 secs   av.it.:   8.7
      thresh= 2.478E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.380E-09

      iter #   5 total cpu time :   341.7 secs   av.it.:   8.8
      thresh= 5.814E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.716E-12

      iter #   6 total cpu time :   345.1 secs   av.it.:   9.0
      thresh= 1.928E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.066E-13

      iter #   7 total cpu time :   348.8 secs   av.it.:   9.0
      thresh= 4.545E-08 alpha_mix =  0.700 |ddv_scf|^2 =  9.778E-16

      iter #   8 total cpu time :   353.9 secs   av.it.:   9.5
      thresh= 3.127E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.941E-16

      iter #   9 total cpu time :   363.6 secs   av.it.:   8.5
      thresh= 2.437E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.930E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   379.9 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.041E-07

      iter #   2 total cpu time :   384.5 secs   av.it.:   9.5
      thresh= 5.514E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.826E-08

      iter #   3 total cpu time :   401.9 secs   av.it.:   9.7
      thresh= 1.351E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.369E-10

      iter #   4 total cpu time :   412.6 secs   av.it.:   9.1
      thresh= 1.170E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.322E-13

      iter #   5 total cpu time :   421.1 secs   av.it.:   9.1
      thresh= 4.819E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.521E-15

      iter #   6 total cpu time :   437.6 secs   av.it.:   8.1
      thresh= 6.724E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.223E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    8
     List of q in the star:
          1  -0.375000000   0.375000000  -0.375000000
          2   0.375000000  -0.375000000  -0.375000000
          3   0.375000000  -0.375000000   0.375000000
          4  -0.375000000   0.375000000   0.375000000
          5   0.375000000   0.375000000  -0.375000000
          6  -0.375000000  -0.375000000  -0.375000000
          7  -0.375000000  -0.375000000   0.375000000
          8   0.375000000   0.375000000   0.375000000

     Diagonalizing the dynamical matrix

     q = (   -0.375000000   0.375000000  -0.375000000 ) 

 **************************************************************************
     freq (    1) =       3.737691 [THz] =     124.675967 [cm-1]
     freq (    2) =       3.737691 [THz] =     124.675967 [cm-1]
     freq (    3) =      11.284775 [THz] =     376.419593 [cm-1]
 **************************************************************************

     Mode symmetry, C_3v (3m)   point group:

     freq (  1 -  2) =        124.7  [cm-1]   --> E    L_3           
     freq (  3 -  3) =        376.4  [cm-1]   --> A_1  L_1           

     Calculation of q =    0.5000000  -0.5000000   0.5000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19795     6879    1759
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 15428  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 15.0

     total cpu time spent up to now is       63.4 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.5000000  -0.5000000   0.5000000 )
 
     13 Sym.Ops. (with q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 15428  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, D_3d (-3m)  point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_2u L_2'  To be done

     Representation     2      2 modes -E_u  L_3'  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  5m51.68s CPU     7m47.74s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   468.3 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.041E-05

      iter #   2 total cpu time :   476.7 secs   av.it.:   8.7
      thresh= 4.518E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.333E-06

      iter #   3 total cpu time :   478.5 secs   av.it.:   8.0
      thresh= 2.887E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.111E-08

      iter #   4 total cpu time :   479.1 secs   av.it.:   8.8
      thresh= 1.453E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.302E-11

      iter #   5 total cpu time :   481.6 secs   av.it.:   8.2
      thresh= 3.608E-07 alpha_mix =  0.700 |ddv_scf|^2 =  7.969E-13

      iter #   6 total cpu time :   483.8 secs   av.it.:   8.5
      thresh= 8.927E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.522E-15

      iter #   7 total cpu time :   485.4 secs   av.it.:   8.8
      thresh= 5.022E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.729E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   488.9 secs   av.it.:   5.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.065E-07

      iter #   2 total cpu time :   490.3 secs   av.it.:   9.3
      thresh= 5.536E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.837E-08

      iter #   3 total cpu time :   501.6 secs   av.it.:   9.6
      thresh= 1.355E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.408E-10

      iter #   4 total cpu time :   511.4 secs   av.it.:   8.9
      thresh= 1.186E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.322E-13

      iter #   5 total cpu time :   524.6 secs   av.it.:   8.9
      thresh= 4.819E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.387E-15

      iter #   6 total cpu time :   526.8 secs   av.it.:   7.8
      thresh= 6.624E-09 alpha_mix =  0.700 |ddv_scf|^2 =  9.274E-19

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    4
     List of q in the star:
          1   0.500000000  -0.500000000   0.500000000
          2   0.500000000   0.500000000   0.500000000
          3  -0.500000000   0.500000000   0.500000000
          4   0.500000000   0.500000000  -0.500000000

     Diagonalizing the dynamical matrix

     q = (    0.500000000  -0.500000000   0.500000000 ) 

 **************************************************************************
     freq (    1) =       4.127850 [THz] =     137.690269 [cm-1]
     freq (    2) =       4.127850 [THz] =     137.690269 [cm-1]
     freq (    3) =      12.201176 [THz] =     406.987422 [cm-1]
 **************************************************************************

     Mode symmetry, D_3d (-3m)  point group:

     freq (  1 -  2) =        137.7  [cm-1]   --> E_u  L_3'          
     freq (  3 -  3) =        407.0  [cm-1]   --> A_2u L_2'          

     Calculation of q =    0.0000000   0.2500000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19795     6879    1459
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 15.0

     total cpu time spent up to now is       73.2 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000   0.2500000   0.0000000 )
 
      8 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_4v (4mm)  point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  G_1 D_1  To be done

     Representation     2      2 modes -E    G_5 D_5  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  6m52.48s CPU     9m 9.30s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   550.1 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.383E-02

      iter #   2 total cpu time :   563.8 secs   av.it.:   7.9
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.139E+01

      iter #   3 total cpu time :   573.3 secs   av.it.:   7.8
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  8.816E-05

      iter #   4 total cpu time :   579.0 secs   av.it.:   6.0
      thresh= 9.389E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.096E-08

      iter #   5 total cpu time :   582.0 secs   av.it.:   8.5
      thresh= 1.759E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.392E-10

      iter #   6 total cpu time :   586.2 secs   av.it.:   8.5
      thresh= 1.180E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.942E-11

      iter #   7 total cpu time :   587.0 secs   av.it.:   8.0
      thresh= 4.407E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.220E-09

      iter #   8 total cpu time :   590.0 secs   av.it.:   4.8
      thresh= 3.493E-06 alpha_mix =  0.700 |ddv_scf|^2 =  7.847E-14

      iter #   9 total cpu time :   592.8 secs   av.it.:   8.1
      thresh= 2.801E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.465E-15

      iter #  10 total cpu time :   594.9 secs   av.it.:   8.1
      thresh= 4.964E-09 alpha_mix =  0.700 |ddv_scf|^2 =  8.859E-16

      iter #  11 total cpu time :   597.1 secs   av.it.:   6.1
      thresh= 2.976E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.335E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   599.5 secs   av.it.:   5.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.995E-07

      iter #   2 total cpu time :   603.0 secs   av.it.:   9.4
      thresh= 5.473E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.797E-08

      iter #   3 total cpu time :   615.0 secs   av.it.:   9.5
      thresh= 1.341E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.393E-10

      iter #   4 total cpu time :   617.4 secs   av.it.:   8.9
      thresh= 1.180E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.042E-13

      iter #   5 total cpu time :   625.2 secs   av.it.:   8.9
      thresh= 4.519E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.542E-15

      iter #   6 total cpu time :   646.3 secs   av.it.:   8.3
      thresh= 6.739E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.739E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    6
     List of q in the star:
          1   0.000000000   0.250000000   0.000000000
          2   0.000000000  -0.250000000   0.000000000
          3   0.250000000   0.000000000   0.000000000
          4   0.000000000   0.000000000   0.250000000
          5   0.000000000   0.000000000  -0.250000000
          6  -0.250000000   0.000000000   0.000000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000   0.250000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       2.558609 [THz] =      85.345995 [cm-1]
     freq (    2) =       2.558609 [THz] =      85.345995 [cm-1]
     freq (    3) =       3.974318 [THz] =     132.568979 [cm-1]
 **************************************************************************

     Mode symmetry, C_4v (4mm)  point group:

     freq (  1 -  2) =         85.3  [cm-1]   --> E    G_5 D_5       
     freq (  3 -  3) =        132.6  [cm-1]   --> A_1  G_1 D_1       

     Calculation of q =   -0.1250000   0.3750000  -0.1250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    169                19795     6879    1471
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is       98.8 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.1250000   0.3750000  -0.1250000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  9m 2.15s CPU    11m57.48s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   720.1 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.448E-03

      iter #   2 total cpu time :   739.2 secs   av.it.:   7.8
      thresh= 3.805E-03 alpha_mix =  0.700 |ddv_scf|^2 =  6.684E-02

      iter #   3 total cpu time :   746.2 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  9.963E-08

      iter #   4 total cpu time :   755.4 secs   av.it.:   9.0
      thresh= 3.156E-05 alpha_mix =  0.700 |ddv_scf|^2 =  6.227E-09

      iter #   5 total cpu time :   759.5 secs   av.it.:   9.0
      thresh= 7.891E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.790E-11

      iter #   6 total cpu time :   763.7 secs   av.it.:   8.6
      thresh= 9.895E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.745E-12

      iter #   7 total cpu time :   769.1 secs   av.it.:   8.1
      thresh= 1.321E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.853E-11

      iter #   8 total cpu time :   773.3 secs   av.it.:   6.6
      thresh= 4.304E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.788E-14

      iter #   9 total cpu time :   778.1 secs   av.it.:   9.0
      thresh= 1.670E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.661E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :   782.9 secs   av.it.:   6.2
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.198E-04

      iter #   2 total cpu time :   787.3 secs   av.it.:   7.9
      thresh= 1.482E-03 alpha_mix =  0.700 |ddv_scf|^2 =  1.009E-02

      iter #   3 total cpu time :   790.1 secs   av.it.:   5.7
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  5.986E-08

      iter #   4 total cpu time :   796.8 secs   av.it.:   9.2
      thresh= 2.447E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.251E-09

      iter #   5 total cpu time :   807.3 secs   av.it.:   9.0
      thresh= 5.702E-06 alpha_mix =  0.700 |ddv_scf|^2 =  5.218E-11

      iter #   6 total cpu time :   820.2 secs   av.it.:   8.8
      thresh= 7.223E-07 alpha_mix =  0.700 |ddv_scf|^2 =  9.264E-13

      iter #   7 total cpu time :   847.9 secs   av.it.:   8.8
      thresh= 9.625E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.483E-11

      iter #   8 total cpu time :   852.1 secs   av.it.:   5.9
      thresh= 4.983E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.117E-12

      iter #   9 total cpu time :   856.1 secs   av.it.:   6.5
      thresh= 1.057E-07 alpha_mix =  0.700 |ddv_scf|^2 =  3.191E-13

      iter #  10 total cpu time :   859.9 secs   av.it.:   7.6
      thresh= 5.649E-08 alpha_mix =  0.700 |ddv_scf|^2 =  9.983E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :   864.2 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.242E-06

      iter #   2 total cpu time :   869.2 secs   av.it.:   8.6
      thresh= 1.115E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.344E-08

      iter #   3 total cpu time :   875.7 secs   av.it.:   8.9
      thresh= 2.710E-05 alpha_mix =  0.700 |ddv_scf|^2 =  7.863E-10

      iter #   4 total cpu time :   889.2 secs   av.it.:   8.2
      thresh= 2.804E-06 alpha_mix =  0.700 |ddv_scf|^2 =  8.414E-13

      iter #   5 total cpu time :   894.4 secs   av.it.:   8.3
      thresh= 9.173E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.877E-14

      iter #   6 total cpu time :   899.6 secs   av.it.:   7.7
      thresh= 1.370E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.248E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1  -0.125000000   0.375000000  -0.125000000
          2  -0.125000000   0.375000000   0.125000000
          3   0.125000000   0.375000000  -0.125000000
          4   0.125000000   0.375000000   0.125000000
          5   0.125000000  -0.375000000   0.125000000
          6   0.375000000  -0.125000000   0.125000000
          7   0.125000000  -0.125000000   0.375000000
          8  -0.125000000  -0.375000000  -0.125000000
          9   0.125000000  -0.375000000  -0.125000000
         10  -0.125000000  -0.375000000   0.125000000
         11   0.125000000  -0.125000000  -0.375000000
         12   0.375000000  -0.125000000  -0.125000000
         13  -0.375000000  -0.125000000   0.125000000
         14   0.375000000   0.125000000   0.125000000
         15  -0.125000000  -0.125000000   0.375000000
         16   0.125000000   0.125000000   0.375000000
         17  -0.375000000   0.125000000  -0.125000000
         18  -0.125000000   0.125000000  -0.375000000
         19  -0.375000000  -0.125000000  -0.125000000
         20   0.125000000   0.125000000  -0.375000000
         21   0.375000000   0.125000000  -0.125000000
         22  -0.125000000  -0.125000000  -0.375000000
         23  -0.375000000   0.125000000   0.125000000
         24  -0.125000000   0.125000000   0.375000000

     Diagonalizing the dynamical matrix

     q = (   -0.125000000   0.375000000  -0.125000000 ) 

 **************************************************************************
     freq (    1) =       3.721736 [THz] =     124.143753 [cm-1]
     freq (    2) =       3.929298 [THz] =     131.067264 [cm-1]
     freq (    3) =       7.341599 [THz] =     244.889392 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        124.1  [cm-1]   --> A''                
     freq (  2 -  2) =        131.1  [cm-1]   --> A'                 
     freq (  3 -  3) =        244.9  [cm-1]   --> A'                 

     Calculation of q =   -0.2500000   0.5000000  -0.2500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      138.6 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.2500000   0.5000000  -0.2500000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 12m21.29s CPU    15m51.26s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   953.9 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  9.758E-05

      iter #   2 total cpu time :   960.9 secs   av.it.:   8.3
      thresh= 9.878E-04 alpha_mix =  0.700 |ddv_scf|^2 =  5.495E-04

      iter #   3 total cpu time :   968.8 secs   av.it.:   6.9
      thresh= 2.344E-03 alpha_mix =  0.700 |ddv_scf|^2 =  5.647E-08

      iter #   4 total cpu time :   982.5 secs   av.it.:   9.0
      thresh= 2.376E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.367E-09

      iter #   5 total cpu time :   990.0 secs   av.it.:   9.1
      thresh= 3.697E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.927E-11

      iter #   6 total cpu time :   993.8 secs   av.it.:   8.9
      thresh= 4.390E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.633E-13

      iter #   7 total cpu time :   998.3 secs   av.it.:   9.2
      thresh= 4.041E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.922E-13

      iter #   8 total cpu time :  1002.2 secs   av.it.:   7.1
      thresh= 5.405E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.472E-15

      iter #   9 total cpu time :  1009.8 secs   av.it.:   9.0
      thresh= 6.687E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.910E-16

      iter #  10 total cpu time :  1016.7 secs   av.it.:   8.0
      thresh= 1.382E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.463E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1023.8 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.580E-05

      iter #   2 total cpu time :  1030.5 secs   av.it.:   8.7
      thresh= 5.080E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.366E-04

      iter #   3 total cpu time :  1034.3 secs   av.it.:   7.0
      thresh= 1.169E-03 alpha_mix =  0.700 |ddv_scf|^2 =  5.798E-08

      iter #   4 total cpu time :  1039.2 secs   av.it.:   9.0
      thresh= 2.408E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.865E-09

      iter #   5 total cpu time :  1043.3 secs   av.it.:   8.9
      thresh= 4.319E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.697E-11

      iter #   6 total cpu time :  1049.0 secs   av.it.:   9.2
      thresh= 4.119E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.772E-13

      iter #   7 total cpu time :  1052.5 secs   av.it.:   9.1
      thresh= 5.265E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.227E-12

      iter #   8 total cpu time :  1059.4 secs   av.it.:   7.0
      thresh= 1.108E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.529E-14

      iter #   9 total cpu time :  1065.6 secs   av.it.:   8.8
      thresh= 1.237E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.455E-14

      iter #  10 total cpu time :  1070.2 secs   av.it.:   8.0
      thresh= 1.206E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.013E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1090.5 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.270E-06

      iter #   2 total cpu time :  1098.7 secs   av.it.:   8.6
      thresh= 1.127E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.472E-08

      iter #   3 total cpu time :  1102.5 secs   av.it.:   8.9
      thresh= 2.734E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.281E-10

      iter #   4 total cpu time :  1106.4 secs   av.it.:   8.2
      thresh= 3.047E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.326E-13

      iter #   5 total cpu time :  1109.1 secs   av.it.:   8.4
      thresh= 9.657E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.965E-14

      iter #   6 total cpu time :  1120.6 secs   av.it.:   7.8
      thresh= 1.402E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.659E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1  -0.250000000   0.500000000  -0.250000000
          2  -0.250000000   0.500000000   0.250000000
          3   0.250000000   0.500000000  -0.250000000
          4   0.250000000   0.500000000   0.250000000
          5   0.250000000  -0.500000000   0.250000000
          6   0.500000000  -0.250000000   0.250000000
          7   0.250000000  -0.250000000   0.500000000
          8  -0.250000000  -0.500000000  -0.250000000
          9   0.250000000  -0.500000000  -0.250000000
         10  -0.250000000  -0.500000000   0.250000000
         11   0.250000000  -0.250000000  -0.500000000
         12   0.500000000  -0.250000000  -0.250000000
         13  -0.500000000  -0.250000000   0.250000000
         14   0.500000000   0.250000000   0.250000000
         15  -0.250000000  -0.250000000   0.500000000
         16   0.250000000   0.250000000   0.500000000
         17  -0.500000000   0.250000000  -0.250000000
         18  -0.250000000   0.250000000  -0.500000000
         19  -0.500000000  -0.250000000  -0.250000000
         20   0.250000000   0.250000000  -0.500000000
         21   0.500000000   0.250000000  -0.250000000
         22  -0.250000000  -0.250000000  -0.500000000
         23  -0.500000000   0.250000000   0.250000000
         24  -0.250000000   0.250000000   0.500000000

     Diagonalizing the dynamical matrix

     q = (   -0.250000000   0.500000000  -0.250000000 ) 

 **************************************************************************
     freq (    1) =       4.302665 [THz] =     143.521449 [cm-1]
     freq (    2) =       4.994323 [THz] =     166.592697 [cm-1]
     freq (    3) =      10.463188 [THz] =     349.014369 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        143.5  [cm-1]   --> A''                
     freq (  2 -  2) =        166.6  [cm-1]   --> A'                 
     freq (  3 -  3) =        349.0  [cm-1]   --> A'                 

     Calculation of q =    0.6250000  -0.3750000   0.6250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19795     6879    1807
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      167.7 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.6250000  -0.3750000   0.6250000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 15m38.49s CPU    19m29.68s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1172.4 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.430E-05

      iter #   2 total cpu time :  1181.5 secs   av.it.:   8.7
      thresh= 3.781E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.989E-06

      iter #   3 total cpu time :  1184.1 secs   av.it.:   7.9
      thresh= 2.998E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.700E-08

      iter #   4 total cpu time :  1188.6 secs   av.it.:   8.9
      thresh= 2.168E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.636E-09

      iter #   5 total cpu time :  1193.9 secs   av.it.:   8.9
      thresh= 6.809E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.613E-11

      iter #   6 total cpu time :  1198.3 secs   av.it.:   8.9
      thresh= 6.792E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.484E-13

      iter #   7 total cpu time :  1225.0 secs   av.it.:   9.2
      thresh= 3.852E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.044E-14

      iter #   8 total cpu time :  1233.0 secs   av.it.:   9.4
      thresh= 1.022E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.330E-16

      iter #   9 total cpu time :  1240.2 secs   av.it.:   8.9
      thresh= 2.081E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.951E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1248.9 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.715E-06

      iter #   2 total cpu time :  1254.4 secs   av.it.:   8.8
      thresh= 2.778E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.149E-06

      iter #   3 total cpu time :  1260.2 secs   av.it.:   8.1
      thresh= 1.775E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.918E-08

      iter #   4 total cpu time :  1268.3 secs   av.it.:   8.8
      thresh= 2.986E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.965E-09

      iter #   5 total cpu time :  1284.1 secs   av.it.:   8.9
      thresh= 7.724E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.024E-11

      iter #   6 total cpu time :  1287.7 secs   av.it.:   9.1
      thresh= 6.344E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.568E-13

      iter #   7 total cpu time :  1290.5 secs   av.it.:   9.4
      thresh= 3.959E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.139E-14

      iter #   8 total cpu time :  1295.3 secs   av.it.:   9.5
      thresh= 1.067E-08 alpha_mix =  0.700 |ddv_scf|^2 =  8.385E-16

      iter #   9 total cpu time :  1302.0 secs   av.it.:   8.6
      thresh= 2.896E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.632E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1307.1 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.265E-06

      iter #   2 total cpu time :  1311.6 secs   av.it.:   8.6
      thresh= 1.125E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.470E-08

      iter #   3 total cpu time :  1324.1 secs   av.it.:   9.0
      thresh= 2.733E-05 alpha_mix =  0.700 |ddv_scf|^2 =  8.275E-10

      iter #   4 total cpu time :  1331.3 secs   av.it.:   8.3
      thresh= 2.877E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.648E-13

      iter #   5 total cpu time :  1342.5 secs   av.it.:   8.4
      thresh= 9.823E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.946E-14

      iter #   6 total cpu time :  1354.8 secs   av.it.:   7.8
      thresh= 1.395E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.294E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.625000000  -0.375000000   0.625000000
          2   0.625000000  -0.375000000  -0.625000000
          3  -0.625000000  -0.375000000   0.625000000
          4  -0.625000000  -0.375000000  -0.625000000
          5  -0.625000000   0.375000000  -0.625000000
          6  -0.375000000   0.625000000  -0.625000000
          7  -0.625000000   0.625000000  -0.375000000
          8   0.625000000   0.375000000   0.625000000
          9  -0.625000000   0.375000000   0.625000000
         10   0.625000000   0.375000000  -0.625000000
         11  -0.625000000   0.625000000   0.375000000
         12  -0.375000000   0.625000000   0.625000000
         13   0.375000000   0.625000000  -0.625000000
         14  -0.375000000  -0.625000000  -0.625000000
         15   0.625000000   0.625000000  -0.375000000
         16  -0.625000000  -0.625000000  -0.375000000
         17   0.375000000  -0.625000000   0.625000000
         18   0.625000000  -0.625000000   0.375000000
         19   0.375000000   0.625000000   0.625000000
         20  -0.625000000  -0.625000000   0.375000000
         21  -0.375000000  -0.625000000   0.625000000
         22   0.625000000   0.625000000   0.375000000
         23   0.375000000  -0.625000000  -0.625000000
         24   0.625000000  -0.625000000  -0.375000000

     Diagonalizing the dynamical matrix

     q = (    0.625000000  -0.375000000   0.625000000 ) 

 **************************************************************************
     freq (    1) =       4.433746 [THz] =     147.893861 [cm-1]
     freq (    2) =       5.849174 [THz] =     195.107444 [cm-1]
     freq (    3) =      11.912833 [THz] =     397.369333 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        147.9  [cm-1]   --> A''                
     freq (  2 -  2) =        195.1  [cm-1]   --> A'                 
     freq (  3 -  3) =        397.4  [cm-1]   --> A'                 

     Calculation of q =    0.5000000  -0.2500000   0.5000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1687
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      201.1 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.5000000  -0.2500000   0.5000000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 18m55.44s CPU    23m26.44s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1409.1 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.267E-05

      iter #   2 total cpu time :  1416.3 secs   av.it.:   8.7
      thresh= 3.560E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.338E-05

      iter #   3 total cpu time :  1426.2 secs   av.it.:   7.8
      thresh= 3.658E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.115E-07

      iter #   4 total cpu time :  1434.4 secs   av.it.:   8.8
      thresh= 3.339E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.237E-09

      iter #   5 total cpu time :  1441.8 secs   av.it.:   9.0
      thresh= 5.690E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.563E-11

      iter #   6 total cpu time :  1446.3 secs   av.it.:   9.1
      thresh= 5.969E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.514E-13

      iter #   7 total cpu time :  1449.4 secs   av.it.:   9.2
      thresh= 3.891E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.712E-14

      iter #   8 total cpu time :  1452.5 secs   av.it.:   9.1
      thresh= 1.308E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.265E-14

      iter #   9 total cpu time :  1455.2 secs   av.it.:   8.0
      thresh= 1.125E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.377E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1465.5 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.028E-05

      iter #   2 total cpu time :  1472.2 secs   av.it.:   8.7
      thresh= 4.504E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.653E-05

      iter #   3 total cpu time :  1476.5 secs   av.it.:   7.6
      thresh= 5.150E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.975E-08

      iter #   4 total cpu time :  1481.1 secs   av.it.:   9.0
      thresh= 1.994E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.917E-09

      iter #   5 total cpu time :  1484.9 secs   av.it.:   9.0
      thresh= 4.379E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.338E-11

      iter #   6 total cpu time :  1487.7 secs   av.it.:   8.8
      thresh= 6.586E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.641E-13

      iter #   7 total cpu time :  1506.5 secs   av.it.:   9.4
      thresh= 4.051E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.753E-14

      iter #   8 total cpu time :  1511.3 secs   av.it.:   9.1
      thresh= 1.324E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.376E-14

      iter #   9 total cpu time :  1516.7 secs   av.it.:   8.0
      thresh= 1.173E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.435E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1521.4 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.231E-06

      iter #   2 total cpu time :  1525.4 secs   av.it.:   8.7
      thresh= 1.109E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.343E-08

      iter #   3 total cpu time :  1529.0 secs   av.it.:   9.0
      thresh= 2.710E-05 alpha_mix =  0.700 |ddv_scf|^2 =  6.025E-10

      iter #   4 total cpu time :  1532.4 secs   av.it.:   8.4
      thresh= 2.455E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.154E-13

      iter #   5 total cpu time :  1536.1 secs   av.it.:   8.5
      thresh= 9.568E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.881E-14

      iter #   6 total cpu time :  1549.1 secs   av.it.:   7.1
      thresh= 1.371E-08 alpha_mix =  0.700 |ddv_scf|^2 =  7.090E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.500000000  -0.250000000   0.500000000
          2   0.500000000  -0.250000000  -0.500000000
          3  -0.500000000  -0.250000000   0.500000000
          4  -0.500000000  -0.250000000  -0.500000000
          5  -0.500000000   0.250000000  -0.500000000
          6  -0.250000000   0.500000000  -0.500000000
          7  -0.500000000   0.500000000  -0.250000000
          8   0.500000000   0.250000000   0.500000000
          9  -0.500000000   0.250000000   0.500000000
         10   0.500000000   0.250000000  -0.500000000
         11  -0.500000000   0.500000000   0.250000000
         12  -0.250000000   0.500000000   0.500000000
         13   0.250000000   0.500000000  -0.500000000
         14  -0.250000000  -0.500000000  -0.500000000
         15   0.500000000   0.500000000  -0.250000000
         16  -0.500000000  -0.500000000  -0.250000000
         17   0.250000000  -0.500000000   0.500000000
         18   0.500000000  -0.500000000   0.250000000
         19   0.250000000   0.500000000   0.500000000
         20  -0.500000000  -0.500000000   0.250000000
         21  -0.250000000  -0.500000000   0.500000000
         22   0.500000000   0.500000000   0.250000000
         23   0.250000000  -0.500000000  -0.500000000
         24   0.500000000  -0.500000000  -0.250000000

     Diagonalizing the dynamical matrix

     q = (    0.500000000  -0.250000000   0.500000000 ) 

 **************************************************************************
     freq (    1) =       4.140754 [THz] =     138.120685 [cm-1]
     freq (    2) =       6.402009 [THz] =     213.548025 [cm-1]
     freq (    3) =      11.643056 [THz] =     388.370542 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        138.1  [cm-1]   --> A''                
     freq (  2 -  2) =        213.5  [cm-1]   --> A'                 
     freq (  3 -  3) =        388.4  [cm-1]   --> A'                 

     Calculation of q =    0.3750000  -0.1250000   0.3750000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      242.9 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.3750000  -0.1250000   0.3750000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 21m52.23s CPU    26m42.09s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1604.8 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.013E-05

      iter #   2 total cpu time :  1609.6 secs   av.it.:   8.2
      thresh= 8.375E-04 alpha_mix =  0.700 |ddv_scf|^2 =  6.940E-04

      iter #   3 total cpu time :  1614.9 secs   av.it.:   6.5
      thresh= 2.634E-03 alpha_mix =  0.700 |ddv_scf|^2 =  4.916E-08

      iter #   4 total cpu time :  1626.6 secs   av.it.:   9.1
      thresh= 2.217E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.115E-09

      iter #   5 total cpu time :  1641.8 secs   av.it.:   8.8
      thresh= 4.599E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.195E-11

      iter #   6 total cpu time :  1651.4 secs   av.it.:   9.1
      thresh= 3.458E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.136E-12

      iter #   7 total cpu time :  1655.9 secs   av.it.:   8.8
      thresh= 1.066E-07 alpha_mix =  0.700 |ddv_scf|^2 =  7.322E-12

      iter #   8 total cpu time :  1667.0 secs   av.it.:   6.9
      thresh= 2.706E-07 alpha_mix =  0.700 |ddv_scf|^2 =  9.308E-15

      iter #   9 total cpu time :  1674.7 secs   av.it.:   9.1
      thresh= 9.648E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.505E-14

      iter #  10 total cpu time :  1687.8 secs   av.it.:   6.9
      thresh= 1.583E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.516E-16

      iter #  11 total cpu time :  1700.3 secs   av.it.:   9.0
      thresh= 1.231E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.975E-19

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1706.9 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.829E-04

      iter #   2 total cpu time :  1711.1 secs   av.it.:   8.1
      thresh= 1.352E-03 alpha_mix =  0.700 |ddv_scf|^2 =  1.845E-03

      iter #   3 total cpu time :  1715.9 secs   av.it.:   6.5
      thresh= 4.296E-03 alpha_mix =  0.700 |ddv_scf|^2 =  8.238E-08

      iter #   4 total cpu time :  1720.8 secs   av.it.:   8.9
      thresh= 2.870E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.669E-09

      iter #   5 total cpu time :  1725.7 secs   av.it.:   9.1
      thresh= 4.086E-06 alpha_mix =  0.700 |ddv_scf|^2 =  5.011E-11

      iter #   6 total cpu time :  1728.7 secs   av.it.:   8.7
      thresh= 7.079E-07 alpha_mix =  0.700 |ddv_scf|^2 =  9.119E-13

      iter #   7 total cpu time :  1731.8 secs   av.it.:   9.1
      thresh= 9.549E-08 alpha_mix =  0.700 |ddv_scf|^2 =  6.103E-12

      iter #   8 total cpu time :  1735.9 secs   av.it.:   6.9
      thresh= 2.471E-07 alpha_mix =  0.700 |ddv_scf|^2 =  9.504E-15

      iter #   9 total cpu time :  1740.4 secs   av.it.:   8.5
      thresh= 9.749E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.874E-15

      iter #  10 total cpu time :  1743.3 secs   av.it.:   7.6
      thresh= 7.664E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.676E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1747.8 secs   av.it.:   5.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.189E-06

      iter #   2 total cpu time :  1750.5 secs   av.it.:   8.6
      thresh= 1.091E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.194E-08

      iter #   3 total cpu time :  1754.1 secs   av.it.:   9.0
      thresh= 2.682E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.408E-10

      iter #   4 total cpu time :  1757.1 secs   av.it.:   8.5
      thresh= 2.100E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.369E-13

      iter #   5 total cpu time :  1766.7 secs   av.it.:   8.3
      thresh= 9.680E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.811E-14

      iter #   6 total cpu time :  1772.1 secs   av.it.:   7.6
      thresh= 1.346E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.762E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.375000000  -0.125000000   0.375000000
          2   0.375000000  -0.125000000  -0.375000000
          3  -0.375000000  -0.125000000   0.375000000
          4  -0.375000000  -0.125000000  -0.375000000
          5  -0.375000000   0.125000000  -0.375000000
          6  -0.125000000   0.375000000  -0.375000000
          7  -0.375000000   0.375000000  -0.125000000
          8   0.375000000   0.125000000   0.375000000
          9  -0.375000000   0.125000000   0.375000000
         10   0.375000000   0.125000000  -0.375000000
         11  -0.375000000   0.375000000   0.125000000
         12  -0.125000000   0.375000000   0.375000000
         13   0.125000000   0.375000000  -0.375000000
         14  -0.125000000  -0.375000000  -0.375000000
         15   0.375000000   0.375000000  -0.125000000
         16  -0.375000000  -0.375000000  -0.125000000
         17   0.125000000  -0.375000000   0.375000000
         18   0.375000000  -0.375000000   0.125000000
         19   0.125000000   0.375000000   0.375000000
         20  -0.375000000  -0.375000000   0.125000000
         21  -0.125000000  -0.375000000   0.375000000
         22   0.375000000   0.375000000   0.125000000
         23   0.125000000  -0.375000000  -0.375000000
         24   0.375000000  -0.375000000  -0.125000000

     Diagonalizing the dynamical matrix

     q = (    0.375000000  -0.125000000   0.375000000 ) 

 **************************************************************************
     freq (    1) =       3.111497 [THz] =     103.788368 [cm-1]
     freq (    2) =       6.113392 [THz] =     203.920802 [cm-1]
     freq (    3) =       9.581894 [THz] =     319.617581 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        103.8  [cm-1]   --> A''                
     freq (  2 -  2) =        203.9  [cm-1]   --> A'                 
     freq (  3 -  3) =        319.6  [cm-1]   --> A'                 

     Calculation of q =    0.2500000   0.0000000   0.2500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    169                19795     6879    1471
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      265.9 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.2500000   0.0000000   0.2500000 )
 
      4 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_2v (mm2)  point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A_1  D_1  S_1  To be done

     Representation     2      1 modes -B_1  D_3  S_3  To be done

     Representation     3      1 modes -B_2  D_4  S_4  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 24m40.62s CPU    29m53.79s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1795.2 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.461E-03

      iter #   2 total cpu time :  1804.0 secs   av.it.:   7.5
      thresh= 6.679E-03 alpha_mix =  0.700 |ddv_scf|^2 =  4.168E-01

      iter #   3 total cpu time :  1808.0 secs   av.it.:   6.9
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  6.880E-08

      iter #   4 total cpu time :  1811.3 secs   av.it.:   9.1
      thresh= 2.623E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.006E-08

      iter #   5 total cpu time :  1815.1 secs   av.it.:   8.7
      thresh= 1.003E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.556E-10

      iter #   6 total cpu time :  1818.1 secs   av.it.:   8.0
      thresh= 1.599E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.656E-13

      iter #   7 total cpu time :  1822.6 secs   av.it.:   9.4
      thresh= 4.069E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.798E-14

      iter #   8 total cpu time :  1825.7 secs   av.it.:   8.1
      thresh= 2.408E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.934E-13

      iter #   9 total cpu time :  1838.3 secs   av.it.:   5.5
      thresh= 7.024E-08 alpha_mix =  0.700 |ddv_scf|^2 =  7.912E-15

      iter #  10 total cpu time :  1841.1 secs   av.it.:   7.2
      thresh= 8.895E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.767E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1842.7 secs   av.it.:   5.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.163E-06

      iter #   2 total cpu time :  1845.1 secs   av.it.:   8.6
      thresh= 1.079E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.086E-08

      iter #   3 total cpu time :  1848.4 secs   av.it.:   8.9
      thresh= 2.662E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.601E-10

      iter #   4 total cpu time :  1849.9 secs   av.it.:   8.5
      thresh= 1.898E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.605E-13

      iter #   5 total cpu time :  1852.8 secs   av.it.:   8.0
      thresh= 9.801E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.920E-14

      iter #   6 total cpu time :  1855.1 secs   av.it.:   7.8
      thresh= 1.386E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.995E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1858.4 secs   av.it.:   5.7
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.272E-06

      iter #   2 total cpu time :  1859.9 secs   av.it.:   8.7
      thresh= 1.128E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.270E-08

      iter #   3 total cpu time :  1862.3 secs   av.it.:   9.0
      thresh= 2.696E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.170E-10

      iter #   4 total cpu time :  1863.7 secs   av.it.:   8.2
      thresh= 3.028E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.286E-12

      iter #   5 total cpu time :  1865.2 secs   av.it.:   8.6
      thresh= 1.134E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.609E-14

      iter #   6 total cpu time :  1868.9 secs   av.it.:   8.3
      thresh= 1.268E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.722E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   12
     List of q in the star:
          1   0.250000000   0.000000000   0.250000000
          2  -0.250000000   0.000000000   0.250000000
          3  -0.250000000   0.000000000  -0.250000000
          4   0.000000000   0.250000000  -0.250000000
          5  -0.250000000   0.250000000   0.000000000
          6   0.250000000   0.000000000  -0.250000000
          7   0.000000000   0.250000000   0.250000000
          8   0.000000000  -0.250000000  -0.250000000
          9   0.250000000   0.250000000   0.000000000
         10  -0.250000000  -0.250000000   0.000000000
         11   0.000000000  -0.250000000   0.250000000
         12   0.250000000  -0.250000000   0.000000000

     Diagonalizing the dynamical matrix

     q = (    0.250000000   0.000000000   0.250000000 ) 

 **************************************************************************
     freq (    1) =       1.855623 [THz] =      61.896909 [cm-1]
     freq (    2) =       4.585698 [THz] =     152.962434 [cm-1]
     freq (    3) =       6.309918 [THz] =     210.476215 [cm-1]
 **************************************************************************

     Mode symmetry, C_2v (mm2)  point group:

     freq (  1 -  1) =         61.9  [cm-1]   --> B_1  D_3  S_3      
     freq (  2 -  2) =        153.0  [cm-1]   --> B_2  D_4  S_4      
     freq (  3 -  3) =        210.5  [cm-1]   --> A_1  D_1  S_1      

     Calculation of q =    0.0000000   0.5000000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1591
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 15.0

     total cpu time spent up to now is      273.5 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000   0.5000000   0.0000000 )
 
      8 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_4v (4mm)  point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  G_1 D_1  To be done

     Representation     2      2 modes -E    G_5 D_5  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 25m51.00s CPU    31m26.95s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1887.8 secs   av.it.:   6.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  5.115E-04

      iter #   2 total cpu time :  1890.3 secs   av.it.:   8.0
      thresh= 2.262E-03 alpha_mix =  0.700 |ddv_scf|^2 =  9.804E-03

      iter #   3 total cpu time :  1893.8 secs   av.it.:   6.3
      thresh= 9.902E-03 alpha_mix =  0.700 |ddv_scf|^2 =  1.308E-07

      iter #   4 total cpu time :  1906.9 secs   av.it.:   8.8
      thresh= 3.617E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.138E-09

      iter #   5 total cpu time :  1910.1 secs   av.it.:   8.9
      thresh= 6.432E-06 alpha_mix =  0.700 |ddv_scf|^2 =  7.357E-11

      iter #   6 total cpu time :  1912.7 secs   av.it.:   8.6
      thresh= 8.577E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.027E-13

      iter #   7 total cpu time :  1915.2 secs   av.it.:   9.4
      thresh= 3.204E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.080E-14

      iter #   8 total cpu time :  1916.1 secs   av.it.:   8.1
      thresh= 1.442E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.847E-15

      iter #   9 total cpu time :  1919.3 secs   av.it.:   7.8
      thresh= 5.335E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.127E-16

      iter #  10 total cpu time :  1923.9 secs   av.it.:   7.8
      thresh= 1.768E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.744E-16

      iter #  11 total cpu time :  1927.8 secs   av.it.:   8.0
      thresh= 1.321E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.094E-19

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :  1941.5 secs   av.it.:   5.8
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.294E-07

      iter #   2 total cpu time :  1944.4 secs   av.it.:   9.5
      thresh= 5.739E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.881E-08

      iter #   3 total cpu time :  1947.6 secs   av.it.:   9.7
      thresh= 1.371E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.978E-10

      iter #   4 total cpu time :  1951.5 secs   av.it.:   8.6
      thresh= 1.726E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.035E-13

      iter #   5 total cpu time :  1954.7 secs   av.it.:   8.9
      thresh= 4.511E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.976E-15

      iter #   6 total cpu time :  1957.3 secs   av.it.:   8.9
      thresh= 7.054E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.303E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    6
     List of q in the star:
          1   0.000000000   0.500000000   0.000000000
          2   0.000000000  -0.500000000   0.000000000
          3   0.500000000   0.000000000   0.000000000
          4   0.000000000   0.000000000   0.500000000
          5   0.000000000   0.000000000  -0.500000000
          6  -0.500000000   0.000000000   0.000000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000   0.500000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       5.214809 [THz] =     173.947309 [cm-1]
     freq (    2) =       5.214809 [THz] =     173.947309 [cm-1]
     freq (    3) =       7.715794 [THz] =     257.371187 [cm-1]
 **************************************************************************

     Mode symmetry, C_4v (4mm)  point group:

     freq (  1 -  2) =        173.9  [cm-1]   --> E    G_5 D_5       
     freq (  3 -  3) =        257.4  [cm-1]   --> A_1  G_1 D_1       

     Calculation of q =   -0.1250000   0.6250000  -0.1250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      299.6 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.1250000   0.6250000  -0.1250000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 27m38.29s CPU    33m27.06s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  2009.8 secs   av.it.:   6.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.457E-05

      iter #   2 total cpu time :  2014.0 secs   av.it.:   8.5
      thresh= 8.636E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.982E-04

      iter #   3 total cpu time :  2017.3 secs   av.it.:   7.1
      thresh= 1.727E-03 alpha_mix =  0.700 |ddv_scf|^2 =  5.699E-08

      iter #   4 total cpu time :  2023.2 secs   av.it.:   9.0
      thresh= 2.387E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.001E-09

      iter #   5 total cpu time :  2027.6 secs   av.it.:   9.0
      thresh= 3.164E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.154E-11

      iter #   6 total cpu time :  2031.9 secs   av.it.:   8.9
      thresh= 3.397E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.188E-13

      iter #   7 total cpu time :  2050.1 secs   av.it.:   9.6
      thresh= 3.447E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.194E-15

      iter #   8 total cpu time :  2053.0 secs   av.it.:   9.2
      thresh= 3.456E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.581E-16

      iter #   9 total cpu time :  2056.6 secs   av.it.:   8.0
      thresh= 2.362E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.994E-16

      iter #  10 total cpu time :  2068.2 secs   av.it.:   8.0
      thresh= 1.730E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.336E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  2075.1 secs   av.it.:   6.3
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.006E-05

      iter #   2 total cpu time :  2081.6 secs   av.it.:   8.8
      thresh= 3.172E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.478E-05

      iter #   3 total cpu time :  2085.6 secs   av.it.:   7.1
      thresh= 5.897E-04 alpha_mix =  0.700 |ddv_scf|^2 =  6.106E-08

      iter #   4 total cpu time :  2089.4 secs   av.it.:   9.0
      thresh= 2.471E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.153E-09

      iter #   5 total cpu time :  2093.6 secs   av.it.:   8.8
      thresh= 3.396E-06 alpha_mix =  0.700 |ddv_scf|^2 =  5.062E-12

      iter #   6 total cpu time :  2096.7 secs   av.it.:   9.1
      thresh= 2.250E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.457E-13

      iter #   7 total cpu time :  2100.9 secs   av.it.:   9.0
      thresh= 3.817E-08 alpha_mix =  0.700 |ddv_scf|^2 =  8.963E-14

      iter #   8 total cpu time :  2103.4 secs   av.it.:   7.6
      thresh= 2.994E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.516E-15

      iter #   9 total cpu time :  2106.2 secs   av.it.:   8.8
      thresh= 6.720E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.409E-15

      iter #  10 total cpu time :  2109.6 secs   av.it.:   7.7
      thresh= 8.006E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.358E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  2127.3 secs   av.it.:   5.8
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.372E-06

      iter #   2 total cpu time :  2131.0 secs   av.it.:   8.6
      thresh= 1.171E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.678E-08

      iter #   3 total cpu time :  2133.8 secs   av.it.:   8.9
      thresh= 2.771E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.505E-09

      iter #   4 total cpu time :  2146.3 secs   av.it.:   7.6
      thresh= 3.880E-06 alpha_mix =  0.700 |ddv_scf|^2 =  8.714E-13

      iter #   5 total cpu time :  2150.6 secs   av.it.:   8.5
      thresh= 9.335E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.905E-14

      iter #   6 total cpu time :  2154.1 secs   av.it.:   8.1
      thresh= 1.380E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.097E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1  -0.125000000   0.625000000  -0.125000000
          2   0.125000000   0.625000000  -0.125000000
          3   0.125000000   0.625000000   0.125000000
          4  -0.125000000   0.625000000   0.125000000
          5   0.125000000  -0.625000000   0.125000000
          6   0.625000000  -0.125000000   0.125000000
          7   0.125000000  -0.125000000   0.625000000
          8  -0.125000000  -0.625000000  -0.125000000
          9   0.125000000  -0.625000000  -0.125000000
         10  -0.125000000  -0.625000000   0.125000000
         11   0.125000000  -0.125000000  -0.625000000
         12   0.625000000  -0.125000000  -0.125000000
         13  -0.625000000  -0.125000000   0.125000000
         14   0.625000000   0.125000000   0.125000000
         15  -0.125000000  -0.125000000   0.625000000
         16   0.125000000   0.125000000   0.625000000
         17  -0.625000000   0.125000000  -0.125000000
         18  -0.125000000   0.125000000  -0.625000000
         19  -0.625000000  -0.125000000  -0.125000000
         20   0.125000000   0.125000000  -0.625000000
         21   0.625000000   0.125000000  -0.125000000
         22  -0.125000000  -0.125000000  -0.625000000
         23  -0.625000000   0.125000000   0.125000000
         24  -0.125000000   0.125000000   0.625000000

     Diagonalizing the dynamical matrix

     q = (   -0.125000000   0.625000000  -0.125000000 ) 

 **************************************************************************
     freq (    1) =       6.037930 [THz] =     201.403680 [cm-1]
     freq (    2) =       7.223692 [THz] =     240.956445 [cm-1]
     freq (    3) =      10.060693 [THz] =     335.588601 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        201.4  [cm-1]   --> A''                
     freq (  2 -  2) =        241.0  [cm-1]   --> A'                 
     freq (  3 -  3) =        335.6  [cm-1]   --> A'                 

     Calculation of q =    0.7500000  -0.2500000   0.7500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19795     6879    1837
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 15.0

     total cpu time spent up to now is      331.4 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.7500000  -0.2500000   0.7500000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 30m22.20s CPU    36m31.70s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  2194.4 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.448E-05

      iter #   2 total cpu time :  2199.4 secs   av.it.:   8.7
      thresh= 3.806E-04 alpha_mix =  0.700 |ddv_scf|^2 =  9.261E-06

      iter #   3 total cpu time :  2203.3 secs   av.it.:   7.9
      thresh= 3.043E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.631E-08

      iter #   4 total cpu time :  2206.9 secs   av.it.:   9.0
      thresh= 1.622E-05 alpha_mix =  0.700 |ddv_scf|^2 =  8.677E-10

      iter #   5 total cpu time :  2210.2 secs   av.it.:   8.9
      thresh= 2.946E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.426E-11

      iter #   6 total cpu time :  2214.3 secs   av.it.:   8.6
      thresh= 3.777E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.191E-13

      iter #   7 total cpu time :  2220.9 secs   av.it.:   9.2
      thresh= 3.451E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.083E-14

      iter #   8 total cpu time :  2231.7 secs   av.it.:   9.3
      thresh= 1.041E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.687E-16

      iter #   9 total cpu time :  2245.1 secs   av.it.:   9.1
      thresh= 1.299E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.691E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  2249.6 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.549E-06

      iter #   2 total cpu time :  2255.4 secs   av.it.:   8.9
      thresh= 2.133E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.454E-06

      iter #   3 total cpu time :  2259.6 secs   av.it.:   8.2
      thresh= 1.206E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.039E-08

      iter #   4 total cpu time :  2262.8 secs   av.it.:   8.8
      thresh= 2.835E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.987E-09

      iter #   5 total cpu time :  2265.7 secs   av.it.:   8.9
      thresh= 4.457E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.388E-11

      iter #   6 total cpu time :  2269.3 secs   av.it.:   9.1
      thresh= 3.726E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.703E-13

      iter #   7 total cpu time :  2273.7 secs   av.it.:   9.1
      thresh= 4.126E-08 alpha_mix =  0.700 |ddv_scf|^2 =  9.079E-15

      iter #   8 total cpu time :  2278.9 secs   av.it.:   9.4
      thresh= 9.529E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.105E-16

      iter #   9 total cpu time :  2289.9 secs   av.it.:   8.9
      thresh= 1.451E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.727E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  2296.9 secs   av.it.:   5.8
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.367E-06

      iter #   2 total cpu time :  2301.5 secs   av.it.:   8.6
      thresh= 1.169E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.727E-08

      iter #   3 total cpu time :  2306.7 secs   av.it.:   8.9
      thresh= 2.780E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.533E-09

      iter #   4 total cpu time :  2315.8 secs   av.it.:   7.7
      thresh= 3.916E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.744E-13

      iter #   5 total cpu time :  2320.2 secs   av.it.:   8.5
      thresh= 9.871E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.979E-14

      iter #   6 total cpu time :  2325.6 secs   av.it.:   8.2
      thresh= 1.407E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.555E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.750000000  -0.250000000   0.750000000
          2  -0.750000000  -0.250000000   0.750000000
          3  -0.750000000  -0.250000000  -0.750000000
          4   0.750000000  -0.250000000  -0.750000000
          5  -0.750000000   0.250000000  -0.750000000
          6  -0.250000000   0.750000000  -0.750000000
          7  -0.750000000   0.750000000  -0.250000000
          8   0.750000000   0.250000000   0.750000000
          9  -0.750000000   0.250000000   0.750000000
         10   0.750000000   0.250000000  -0.750000000
         11  -0.750000000   0.750000000   0.250000000
         12  -0.250000000   0.750000000   0.750000000
         13   0.250000000   0.750000000  -0.750000000
         14  -0.250000000  -0.750000000  -0.750000000
         15   0.750000000   0.750000000  -0.250000000
         16  -0.750000000  -0.750000000  -0.250000000
         17   0.250000000  -0.750000000   0.750000000
         18   0.750000000  -0.750000000   0.250000000
         19   0.250000000   0.750000000   0.750000000
         20  -0.750000000  -0.750000000   0.250000000
         21  -0.250000000  -0.750000000   0.750000000
         22   0.750000000   0.750000000   0.250000000
         23   0.250000000  -0.750000000  -0.750000000
         24   0.750000000  -0.750000000  -0.250000000

     Diagonalizing the dynamical matrix

     q = (    0.750000000  -0.250000000   0.750000000 ) 

 **************************************************************************
     freq (    1) =       5.811295 [THz] =     193.843943 [cm-1]
     freq (    2) =       8.789227 [THz] =     293.177070 [cm-1]
     freq (    3) =      11.607439 [THz] =     387.182473 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        193.8  [cm-1]   --> A''                
     freq (  2 -  2) =        293.2  [cm-1]   --> A'                 
     freq (  3 -  3) =        387.2  [cm-1]   --> A'                 

     Calculation of q =    0.6250000  -0.1250000   0.6250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19795     6879    1807
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      361.5 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.6250000  -0.1250000   0.6250000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 32m46.52s CPU    39m20.36s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  2363.0 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  5.787E-06

      iter #   2 total cpu time :  2368.6 secs   av.it.:   8.9
      thresh= 2.406E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.691E-07

      iter #   3 total cpu time :  2373.1 secs   av.it.:   8.4
      thresh= 9.322E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.981E-08

      iter #   4 total cpu time :  2377.2 secs   av.it.:   8.8
      thresh= 1.727E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.465E-09

      iter #   5 total cpu time :  2390.4 secs   av.it.:   8.8
      thresh= 4.965E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.613E-11

      iter #   6 total cpu time :  2394.9 secs   av.it.:   8.8
      thresh= 4.017E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.890E-13

      iter #   7 total cpu time :  2410.3 secs   av.it.:   9.1
      thresh= 4.347E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.541E-14

      iter #   8 total cpu time :  2413.3 secs   av.it.:   9.1
      thresh= 1.241E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.969E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  2425.2 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  8.323E-06

      iter #   2 total cpu time :  2434.7 secs   av.it.:   8.8
      thresh= 2.885E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.347E-06

      iter #   3 total cpu time :  2446.5 secs   av.it.:   8.1
      thresh= 1.532E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.945E-08

      iter #   4 total cpu time :  2451.5 secs   av.it.:   9.0
      thresh= 1.395E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.266E-10

      iter #   5 total cpu time :  2455.9 secs   av.it.:   9.0
      thresh= 2.295E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.743E-11

      iter #   6 total cpu time :  2460.2 secs   av.it.:   8.7
      thresh= 4.175E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.818E-13

      iter #   7 total cpu time :  2466.0 secs   av.it.:   9.1
      thresh= 5.308E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.345E-14

      iter #   8 total cpu time :  2481.1 secs   av.it.:   9.2
      thresh= 1.160E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.107E-16

      iter #   9 total cpu time :  2484.0 secs   av.it.:   9.0
      thresh= 1.451E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.572E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  2487.6 secs   av.it.:   5.7
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.307E-06

      iter #   2 total cpu time :  2491.4 secs   av.it.:   8.6
      thresh= 1.143E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.594E-08

      iter #   3 total cpu time :  2495.0 secs   av.it.:   9.0
      thresh= 2.756E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.132E-09

      iter #   4 total cpu time :  2499.7 secs   av.it.:   8.1
      thresh= 3.364E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.741E-13

      iter #   5 total cpu time :  2504.1 secs   av.it.:   8.2
      thresh= 9.870E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.992E-14

      iter #   6 total cpu time :  2506.7 secs   av.it.:   8.1
      thresh= 1.411E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.425E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.625000000  -0.125000000   0.625000000
          2  -0.625000000  -0.125000000   0.625000000
          3  -0.625000000  -0.125000000  -0.625000000
          4   0.625000000  -0.125000000  -0.625000000
          5  -0.625000000   0.125000000  -0.625000000
          6  -0.125000000   0.625000000  -0.625000000
          7  -0.625000000   0.625000000  -0.125000000
          8   0.625000000   0.125000000   0.625000000
          9  -0.625000000   0.125000000   0.625000000
         10   0.625000000   0.125000000  -0.625000000
         11  -0.625000000   0.625000000   0.125000000
         12  -0.125000000   0.625000000   0.625000000
         13   0.125000000   0.625000000  -0.625000000
         14  -0.125000000  -0.625000000  -0.625000000
         15   0.625000000   0.625000000  -0.125000000
         16  -0.625000000  -0.625000000  -0.125000000
         17   0.125000000  -0.625000000   0.625000000
         18   0.625000000  -0.625000000   0.125000000
         19   0.125000000   0.625000000   0.625000000
         20  -0.625000000  -0.625000000   0.125000000
         21  -0.125000000  -0.625000000   0.625000000
         22   0.625000000   0.625000000   0.125000000
         23   0.125000000  -0.625000000  -0.625000000
         24   0.625000000  -0.625000000  -0.125000000

     Diagonalizing the dynamical matrix

     q = (    0.625000000  -0.125000000   0.625000000 ) 

 **************************************************************************
     freq (    1) =       4.945386 [THz] =     164.960312 [cm-1]
     freq (    2) =       9.634914 [THz] =     321.386139 [cm-1]
     freq (    3) =      11.552166 [THz] =     385.338783 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        165.0  [cm-1]   --> A''                
     freq (  2 -  2) =        321.4  [cm-1]   --> A'                 
     freq (  3 -  3) =        385.3  [cm-1]   --> A'                 

     Calculation of q =    0.5000000   0.0000000   0.5000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      378.7 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.5000000   0.0000000   0.5000000 )
 
      4 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_2v (mm2)  point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A_1  D_1  S_1  To be done

     Representation     2      1 modes -B_1  D_3  S_3  To be done

     Representation     3      1 modes -B_2  D_4  S_4  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 35m 9.58s CPU    42m10.36s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  2531.8 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.291E-05

      iter #   2 total cpu time :  2535.0 secs   av.it.:   8.6
      thresh= 6.551E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.344E-05

      iter #   3 total cpu time :  2547.3 secs   av.it.:   7.4
      thresh= 9.134E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.244E-08

      iter #   4 total cpu time :  2556.4 secs   av.it.:   8.8
      thresh= 2.060E-05 alpha_mix =  0.700 |ddv_scf|^2 =  8.678E-10

      iter #   5 total cpu time :  2566.1 secs   av.it.:   9.0
      thresh= 2.946E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.102E-12

      iter #   6 total cpu time :  2584.3 secs   av.it.:   9.2
      thresh= 1.761E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.539E-13

      iter #   7 total cpu time :  2592.5 secs   av.it.:   9.4
      thresh= 3.923E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.887E-16

      iter #   8 total cpu time :  2595.4 secs   av.it.:   9.5
      thresh= 2.211E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.429E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  2612.0 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.235E-06

      iter #   2 total cpu time :  2616.1 secs   av.it.:   8.7
      thresh= 1.111E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.344E-08

      iter #   3 total cpu time :  2620.1 secs   av.it.:   9.0
      thresh= 2.710E-05 alpha_mix =  0.700 |ddv_scf|^2 =  6.447E-10

      iter #   4 total cpu time :  2644.8 secs   av.it.:   8.4
      thresh= 2.539E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.013E-13

      iter #   5 total cpu time :  2646.7 secs   av.it.:   8.4
      thresh= 9.494E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.895E-14

      iter #   6 total cpu time :  2652.7 secs   av.it.:   7.6
      thresh= 1.377E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.040E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  2662.9 secs   av.it.:   6.2
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.139E-06

      iter #   2 total cpu time :  2665.5 secs   av.it.:   8.8
      thresh= 1.463E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.603E-08

      iter #   3 total cpu time :  2668.1 secs   av.it.:   8.6
      thresh= 2.757E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.417E-09

      iter #   4 total cpu time :  2673.0 secs   av.it.:   8.6
      thresh= 6.646E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.563E-12

      iter #   5 total cpu time :  2676.2 secs   av.it.:   8.4
      thresh= 2.136E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.085E-14

      iter #   6 total cpu time :  2679.5 secs   av.it.:   8.2
      thresh= 1.042E-08 alpha_mix =  0.700 |ddv_scf|^2 =  6.315E-16

      iter #   7 total cpu time :  2681.7 secs   av.it.:   8.4
      thresh= 2.513E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.086E-19

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   12
     List of q in the star:
          1   0.500000000   0.000000000   0.500000000
          2  -0.500000000   0.000000000   0.500000000
          3  -0.500000000   0.000000000  -0.500000000
          4   0.500000000   0.000000000  -0.500000000
          5   0.000000000   0.500000000  -0.500000000
          6  -0.500000000   0.500000000   0.000000000
          7   0.000000000   0.500000000   0.500000000
          8   0.000000000  -0.500000000  -0.500000000
          9   0.500000000   0.500000000   0.000000000
         10  -0.500000000  -0.500000000   0.000000000
         11   0.000000000  -0.500000000   0.500000000
         12   0.500000000  -0.500000000   0.000000000

     Diagonalizing the dynamical matrix

     q = (    0.500000000   0.000000000   0.500000000 ) 

 **************************************************************************
     freq (    1) =       4.150621 [THz] =     138.449807 [cm-1]
     freq (    2) =       9.439494 [THz] =     314.867627 [cm-1]
     freq (    3) =      10.187204 [THz] =     339.808541 [cm-1]
 **************************************************************************

     Mode symmetry, C_2v (mm2)  point group:

     freq (  1 -  1) =        138.4  [cm-1]   --> B_1  D_3  S_3      
     freq (  2 -  2) =        314.9  [cm-1]   --> B_2  D_4  S_4      
     freq (  3 -  3) =        339.8  [cm-1]   --> A_1  D_1  S_1      

     Calculation of q =    0.0000000   0.7500000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1687
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 15.0

     total cpu time spent up to now is      387.5 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000   0.7500000   0.0000000 )
 
      8 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_4v (4mm)  point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  G_1 D_1  To be done

     Representation     2      2 modes -E    G_5 D_5  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 37m23.87s CPU    44m58.64s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  2699.5 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.180E-05

      iter #   2 total cpu time :  2701.9 secs   av.it.:   8.6
      thresh= 5.639E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.932E-05

      iter #   3 total cpu time :  2704.9 secs   av.it.:   7.6
      thresh= 7.023E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.347E-08

      iter #   4 total cpu time :  2716.2 secs   av.it.:   8.8
      thresh= 1.829E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.182E-09

      iter #   5 total cpu time :  2730.0 secs   av.it.:   8.8
      thresh= 3.438E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.795E-12

      iter #   6 total cpu time :  2746.3 secs   av.it.:   9.0
      thresh= 1.672E-07 alpha_mix =  0.700 |ddv_scf|^2 =  8.959E-14

      iter #   7 total cpu time :  2753.7 secs   av.it.:   9.0
      thresh= 2.993E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.299E-16

      iter #   8 total cpu time :  2756.4 secs   av.it.:   9.0
      thresh= 2.073E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.743E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :  2760.8 secs   av.it.:   6.0
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.660E-07

      iter #   2 total cpu time :  2764.7 secs   av.it.:   9.5
      thresh= 6.050E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.952E-08

      iter #   3 total cpu time :  2773.2 secs   av.it.:   9.7
      thresh= 1.397E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.913E-10

      iter #   4 total cpu time :  2785.3 secs   av.it.:   8.6
      thresh= 2.217E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.071E-13

      iter #   5 total cpu time :  2796.7 secs   av.it.:   9.1
      thresh= 4.551E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.603E-15

      iter #   6 total cpu time :  2799.6 secs   av.it.:   9.1
      thresh= 6.785E-09 alpha_mix =  0.700 |ddv_scf|^2 =  7.609E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    6
     List of q in the star:
          1   0.000000000   0.750000000   0.000000000
          2   0.000000000  -0.750000000   0.000000000
          3   0.750000000   0.000000000   0.000000000
          4   0.000000000   0.000000000   0.750000000
          5   0.000000000   0.000000000  -0.750000000
          6  -0.750000000   0.000000000   0.000000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000   0.750000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       7.278502 [THz] =     242.784689 [cm-1]
     freq (    2) =       7.278502 [THz] =     242.784689 [cm-1]
     freq (    3) =      11.548503 [THz] =     385.216581 [cm-1]
 **************************************************************************

     Mode symmetry, C_4v (4mm)  point group:

     freq (  1 -  2) =        242.8  [cm-1]   --> E    G_5 D_5       
     freq (  3 -  3) =        385.2  [cm-1]   --> A_1  G_1 D_1       

     Calculation of q =    0.8750000  -0.1250000   0.8750000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19795     6879    1917
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      414.7 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.8750000  -0.1250000   0.8750000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 39m 9.70s CPU    47m20.15s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  2842.9 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  9.761E-06

      iter #   2 total cpu time :  2846.5 secs   av.it.:   8.8
      thresh= 3.124E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.991E-06

      iter #   3 total cpu time :  2859.4 secs   av.it.:   8.0
      thresh= 1.729E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.304E-08

      iter #   4 total cpu time :  2863.0 secs   av.it.:   8.9
      thresh= 1.518E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.903E-10

      iter #   5 total cpu time :  2866.2 secs   av.it.:   8.9
      thresh= 3.147E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.320E-12

      iter #   6 total cpu time :  2870.5 secs   av.it.:   9.1
      thresh= 2.078E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.047E-13

      iter #   7 total cpu time :  2887.2 secs   av.it.:   9.1
      thresh= 3.235E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.940E-15

      iter #   8 total cpu time :  2890.5 secs   av.it.:   8.9
      thresh= 5.422E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.573E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  2910.5 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.921E-06

      iter #   2 total cpu time :  2927.0 secs   av.it.:   9.0
      thresh= 1.709E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.210E-07

      iter #   3 total cpu time :  2930.5 secs   av.it.:   8.8
      thresh= 6.489E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.658E-08

      iter #   4 total cpu time :  2934.5 secs   av.it.:   8.9
      thresh= 1.913E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.990E-10

      iter #   5 total cpu time :  2938.3 secs   av.it.:   8.9
      thresh= 3.161E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.088E-12

      iter #   6 total cpu time :  2946.7 secs   av.it.:   9.0
      thresh= 3.015E-07 alpha_mix =  0.700 |ddv_scf|^2 =  3.287E-13

      iter #   7 total cpu time :  2950.9 secs   av.it.:   9.0
      thresh= 5.734E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.979E-15

      iter #   8 total cpu time :  2960.4 secs   av.it.:   9.1
      thresh= 5.458E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.395E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  2983.5 secs   av.it.:   5.9
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.482E-06

      iter #   2 total cpu time :  2986.2 secs   av.it.:   8.6
      thresh= 1.217E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.869E-08

      iter #   3 total cpu time :  2989.3 secs   av.it.:   8.9
      thresh= 2.805E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.105E-09

      iter #   4 total cpu time :  2992.4 secs   av.it.:   7.6
      thresh= 4.588E-06 alpha_mix =  0.700 |ddv_scf|^2 =  8.765E-13

      iter #   5 total cpu time :  2999.4 secs   av.it.:   8.5
      thresh= 9.362E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.786E-14

      iter #   6 total cpu time :  3003.5 secs   av.it.:   8.4
      thresh= 1.336E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.661E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.875000000  -0.125000000   0.875000000
          2  -0.875000000  -0.125000000   0.875000000
          3  -0.875000000  -0.125000000  -0.875000000
          4   0.875000000  -0.125000000  -0.875000000
          5  -0.875000000   0.125000000  -0.875000000
          6  -0.125000000   0.875000000  -0.875000000
          7  -0.875000000   0.875000000  -0.125000000
          8   0.875000000   0.125000000   0.875000000
          9  -0.875000000   0.125000000   0.875000000
         10   0.875000000   0.125000000  -0.875000000
         11  -0.875000000   0.875000000   0.125000000
         12  -0.125000000   0.875000000   0.875000000
         13   0.125000000   0.875000000  -0.875000000
         14  -0.125000000  -0.875000000  -0.875000000
         15   0.875000000   0.875000000  -0.125000000
         16  -0.875000000  -0.875000000  -0.125000000
         17   0.125000000  -0.875000000   0.875000000
         18   0.875000000  -0.875000000   0.125000000
         19   0.125000000   0.875000000   0.875000000
         20  -0.875000000  -0.875000000   0.125000000
         21  -0.125000000  -0.875000000   0.875000000
         22   0.875000000   0.875000000   0.125000000
         23   0.125000000  -0.875000000  -0.875000000
         24   0.875000000  -0.875000000  -0.125000000

     Diagonalizing the dynamical matrix

     q = (    0.875000000  -0.125000000   0.875000000 ) 

 **************************************************************************
     freq (    1) =       7.434894 [THz] =     248.001357 [cm-1]
     freq (    2) =       8.779286 [THz] =     292.845460 [cm-1]
     freq (    3) =      12.446328 [THz] =     415.164810 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        248.0  [cm-1]   --> A''                
     freq (  2 -  2) =        292.8  [cm-1]   --> A'                 
     freq (  3 -  3) =        415.2  [cm-1]   --> A'                 

     Calculation of q =    0.7500000   0.0000000   0.7500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19795     6879    1807
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      435.9 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.7500000   0.0000000   0.7500000 )
 
      4 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_2v (mm2)  point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A_1  D_1  S_1  To be done

     Representation     2      1 modes -B_1  D_3  S_3  To be done

     Representation     3      1 modes -B_2  D_4  S_4  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 41m57.52s CPU    50m24.20s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  3025.6 secs   av.it.:   6.3
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.043E-06

      iter #   2 total cpu time :  3028.9 secs   av.it.:   8.8
      thresh= 2.011E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.312E-07

      iter #   3 total cpu time :  3041.6 secs   av.it.:   8.2
      thresh= 4.808E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.827E-09

      iter #   4 total cpu time :  3045.5 secs   av.it.:   8.8
      thresh= 9.913E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.471E-11

      iter #   5 total cpu time :  3049.4 secs   av.it.:   8.8
      thresh= 6.687E-07 alpha_mix =  0.700 |ddv_scf|^2 =  3.205E-12

      iter #   6 total cpu time :  3057.3 secs   av.it.:   8.9
      thresh= 1.790E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.430E-14

      iter #   7 total cpu time :  3062.8 secs   av.it.:   9.4
      thresh= 1.196E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.007E-15

      iter #   8 total cpu time :  3066.2 secs   av.it.:   9.4
      thresh= 3.173E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.713E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  3068.7 secs   av.it.:   5.9
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.413E-06

      iter #   2 total cpu time :  3071.5 secs   av.it.:   8.6
      thresh= 1.189E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.821E-08

      iter #   3 total cpu time :  3074.2 secs   av.it.:   8.9
      thresh= 2.797E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.826E-09

      iter #   4 total cpu time :  3076.8 secs   av.it.:   7.4
      thresh= 4.273E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.689E-13

      iter #   5 total cpu time :  3079.2 secs   av.it.:   8.5
      thresh= 9.843E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.937E-14

      iter #   6 total cpu time :  3081.6 secs   av.it.:   8.3
      thresh= 1.392E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.168E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  3084.0 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  5.276E-06

      iter #   2 total cpu time :  3086.5 secs   av.it.:   8.8
      thresh= 2.297E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.038E-07

      iter #   3 total cpu time :  3091.1 secs   av.it.:   8.2
      thresh= 5.512E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.139E-08

      iter #   4 total cpu time :  3093.7 secs   av.it.:   8.6
      thresh= 1.067E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.434E-12

      iter #   5 total cpu time :  3096.0 secs   av.it.:   8.8
      thresh= 2.331E-07 alpha_mix =  0.700 |ddv_scf|^2 =  4.494E-14

      iter #   6 total cpu time :  3098.0 secs   av.it.:   8.2
      thresh= 2.120E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.190E-15

      iter #   7 total cpu time :  3102.3 secs   av.it.:   8.4
      thresh= 3.450E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.242E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   12
     List of q in the star:
          1   0.750000000   0.000000000   0.750000000
          2   0.750000000   0.000000000  -0.750000000
          3  -0.750000000   0.000000000   0.750000000
          4  -0.750000000   0.000000000  -0.750000000
          5   0.000000000   0.750000000  -0.750000000
          6  -0.750000000   0.750000000   0.000000000
          7   0.000000000   0.750000000   0.750000000
          8   0.000000000  -0.750000000  -0.750000000
          9   0.750000000   0.750000000   0.000000000
         10  -0.750000000  -0.750000000   0.000000000
         11   0.000000000  -0.750000000   0.750000000
         12   0.750000000  -0.750000000   0.000000000

     Diagonalizing the dynamical matrix

     q = (    0.750000000   0.000000000   0.750000000 ) 

 **************************************************************************
     freq (    1) =       6.423355 [THz] =     214.260060 [cm-1]
     freq (    2) =      10.131981 [THz] =     337.966493 [cm-1]
     freq (    3) =      12.125259 [THz] =     404.455106 [cm-1]
 **************************************************************************

     Mode symmetry, C_2v (mm2)  point group:

     freq (  1 -  1) =        214.3  [cm-1]   --> B_1  D_3  S_3      
     freq (  2 -  2) =        338.0  [cm-1]   --> A_1  D_1  S_1      
     freq (  3 -  3) =        404.5  [cm-1]   --> B_2  D_4  S_4      

     Calculation of q =    0.0000000  -1.0000000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19795     6879    1807
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 11368  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 15.0

     total cpu time spent up to now is      441.3 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000  -1.0000000   0.0000000 )
 
     17 Sym.Ops. (with q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 11368  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, D_4h(4/mmm) point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_2u X_4' M_4'  To be done

     Representation     2      2 modes -E_u  X_5' M_5'  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 43m24.68s CPU    52m 2.15s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  3122.7 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  8.186E-06

      iter #   2 total cpu time :  3133.8 secs   av.it.:   8.7
      thresh= 2.861E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.438E-07

      iter #   3 total cpu time :  3137.8 secs   av.it.:   8.0
      thresh= 9.186E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.469E-08

      iter #   4 total cpu time :  3138.3 secs   av.it.:   8.7
      thresh= 1.212E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.059E-12

      iter #   5 total cpu time :  3149.8 secs   av.it.:   8.6
      thresh= 2.249E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.212E-13

      iter #   6 total cpu time :  3156.8 secs   av.it.:   8.7
      thresh= 3.482E-08 alpha_mix =  0.700 |ddv_scf|^2 =  7.750E-16

      iter #   7 total cpu time :  3161.3 secs   av.it.:   8.6
      thresh= 2.784E-09 alpha_mix =  0.700 |ddv_scf|^2 =  8.877E-19

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :  3164.5 secs   av.it.:   6.1
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.835E-07

      iter #   2 total cpu time :  3167.8 secs   av.it.:   9.4
      thresh= 6.192E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.977E-08

      iter #   3 total cpu time :  3172.5 secs   av.it.:   9.6
      thresh= 1.406E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.808E-10

      iter #   4 total cpu time :  3173.5 secs   av.it.:   8.6
      thresh= 2.410E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.071E-13

      iter #   5 total cpu time :  3175.7 secs   av.it.:   9.0
      thresh= 4.551E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.331E-15

      iter #   6 total cpu time :  3178.2 secs   av.it.:   9.0
      thresh= 6.581E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.536E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    3
     List of q in the star:
          1   0.000000000  -1.000000000   0.000000000
          2  -1.000000000   0.000000000   0.000000000
          3   0.000000000   0.000000000  -1.000000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000  -1.000000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       8.022486 [THz] =     267.601343 [cm-1]
     freq (    2) =       8.022486 [THz] =     267.601343 [cm-1]
     freq (    3) =      13.004780 [THz] =     433.792760 [cm-1]
 **************************************************************************

     Mode symmetry, D_4h(4/mmm) point group:

     freq (  1 -  2) =        267.6  [cm-1]   --> E_u  X_5' M_5'     
     freq (  3 -  3) =        433.8  [cm-1]   --> A_2u X_4' M_4'     

     Calculation of q =   -0.2500000   0.5000000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 87808  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      468.2 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.2500000   0.5000000   0.0000000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 87808  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 44m59.72s CPU    53m56.79s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  3239.5 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.671E-04

     Program PHONON v.5.2.0 starts on  3Jun2016 at 17:25:23 

     This program is part of the open-source Quantum ESPRESSO suite
     for quantum simulation of materials; please cite
         "P. Giannozzi et al., J. Phys.:Condens. Matter 21 395502 (2009);
          URL http://www.quantum-espresso.org", 
     in publications or presentations arising from this work. More details at
     http://www.quantum-espresso.org/quote

     Parallel version (MPI), running on   384 processors
     K-points division:     npool     =     384

     Reading data from directory:
     ./tmp/li-fcc.save

   Info: using nr1, nr2, nr3 values from input

   Info: using nr1, nr2, nr3 values from input

     IMPORTANT: XC functional enforced from input :
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)
     Any further DFT definition will be discarded
     Please, verify this is what you really want

 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19795     6879    1411
 


     Dynamical matrices for ( 8, 8, 8)  uniform grid of q-points
     (  29q-points):
       N         xq(1)         xq(2)         xq(3) 
       1   0.000000000   0.000000000   0.000000000
       2  -0.125000000   0.125000000  -0.125000000
       3  -0.250000000   0.250000000  -0.250000000
       4  -0.375000000   0.375000000  -0.375000000
       5   0.500000000  -0.500000000   0.500000000
       6   0.000000000   0.250000000   0.000000000
       7  -0.125000000   0.375000000  -0.125000000
       8  -0.250000000   0.500000000  -0.250000000
       9   0.625000000  -0.375000000   0.625000000
      10   0.500000000  -0.250000000   0.500000000
      11   0.375000000  -0.125000000   0.375000000
      12   0.250000000   0.000000000   0.250000000
      13   0.000000000   0.500000000   0.000000000
      14  -0.125000000   0.625000000  -0.125000000
      15   0.750000000  -0.250000000   0.750000000
      16   0.625000000  -0.125000000   0.625000000
      17   0.500000000   0.000000000   0.500000000
      18   0.000000000   0.750000000   0.000000000
      19   0.875000000  -0.125000000   0.875000000
      20   0.750000000   0.000000000   0.750000000
      21   0.000000000  -1.000000000   0.000000000
      22  -0.250000000   0.500000000   0.000000000
      23   0.625000000  -0.375000000   0.875000000
      24   0.500000000  -0.250000000   0.750000000
      25   0.750000000  -0.250000000   1.000000000
      26   0.625000000  -0.125000000   0.875000000
      27   0.500000000   0.000000000   0.750000000
      28  -0.250000000  -1.000000000   0.000000000
      29  -0.500000000  -1.000000000   0.000000000

     Calculation of q =   -0.2500000   0.5000000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19795     6879    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.639378  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 87808  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19795 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6879 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     899,    6)
        NL pseudopotentials             0.12 Mb     (     899,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19795)
        G-vector shells                 0.00 Mb     (     239)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.33 Mb     (     899,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is       25.2 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.6339 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.6394  a.u.
     unit-cell volume          =     111.4587 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.63938  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.2500000   0.5000000   0.0000000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  709.5737  (  19795 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  354.7868  (   6879 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 87808  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  0m43.61s CPU     1m14.82s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :    77.5 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.671E-04

      iter #   2 total cpu time :    89.0 secs   av.it.:   8.1
      thresh= 1.293E-03 alpha_mix =  0.700 |ddv_scf|^2 =  1.499E-03

      iter #   3 total cpu time :    96.7 secs   av.it.:   6.6
      thresh= 3.872E-03 alpha_mix =  0.700 |ddv_scf|^2 =  8.496E-08

      iter #   4 total cpu time :    99.5 secs   av.it.:   9.0
      thresh= 2.915E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.166E-09

      iter #   5 total cpu time :   102.6 secs   av.it.:   9.1
      thresh= 3.415E-06 alpha_mix =  0.700 |ddv_scf|^2 =  5.621E-11

      iter #   6 total cpu time :   117.6 secs   av.it.:   8.7
      thresh= 7.497E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.342E-13

      iter #   7 total cpu time :   121.5 secs   av.it.:   9.6
      thresh= 4.840E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.910E-14

      iter #   8 total cpu time :   125.3 secs   av.it.:   7.5
      thresh= 1.706E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.520E-14

      iter #   9 total cpu time :   128.4 secs   av.it.:   7.6
      thresh= 1.587E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.292E-15

      iter #  10 total cpu time :   132.1 secs   av.it.:   7.4
      thresh= 3.594E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.178E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :   137.8 secs   av.it.:   6.3
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  5.058E-05

      iter #   2 total cpu time :   141.5 secs   av.it.:   8.3
      thresh= 7.112E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.451E-04

      iter #   3 total cpu time :   144.2 secs   av.it.:   6.6
      thresh= 2.110E-03 alpha_mix =  0.700 |ddv_scf|^2 =  4.954E-08

      iter #   4 total cpu time :   147.0 secs   av.it.:   9.2
      thresh= 2.226E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.362E-09

      iter #   5 total cpu time :   151.6 secs   av.it.:   8.7
      thresh= 3.691E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.269E-11

      iter #   6 total cpu time :   156.6 secs   av.it.:   8.8
      thresh= 4.764E-07 alpha_mix =  0.700 |ddv_scf|^2 =  4.636E-13

      iter #   7 total cpu time :   161.0 secs   av.it.:   9.0
      thresh= 6.809E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.890E-14

      iter #   8 total cpu time :   165.3 secs   av.it.:   7.6
      thresh= 1.972E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.272E-14

      iter #   9 total cpu time :   169.7 secs   av.it.:   8.0
      thresh= 1.128E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.651E-15

      iter #  10 total cpu time :   173.3 secs   av.it.:   7.6
      thresh= 5.148E-09 alpha_mix =  0.700 |ddv_scf|^2 =  7.208E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :   188.8 secs   av.it.:   6.0
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.504E-06

      iter #   2 total cpu time :   193.8 secs   av.it.:   8.8
      thresh= 1.226E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.401E-08

      iter #   3 total cpu time :   196.7 secs   av.it.:   8.9
      thresh= 2.721E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.946E-09

      iter #   4 total cpu time :   201.8 secs   av.it.:   8.5
      thresh= 4.411E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.526E-12

      iter #   5 total cpu time :   204.5 secs   av.it.:   8.7
      thresh= 1.878E-07 alpha_mix =  0.700 |ddv_scf|^2 =  8.324E-15

      iter #   6 total cpu time :   207.4 secs   av.it.:   8.1
      thresh= 9.124E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.874E-16

      iter #   7 total cpu time :   212.4 secs   av.it.:   8.2
      thresh= 1.695E-09 alpha_mix =  0.700 |ddv_scf|^2 =  7.619E-20

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1  -0.250000000   0.500000000   0.000000000
          2  -0.250000000  -0.500000000   0.000000000
          3   0.250000000   0.000000000  -0.500000000
          4   0.250000000   0.000000000   0.500000000
          5   0.250000000  -0.500000000   0.000000000
          6   0.000000000   0.500000000   0.250000000
          7   0.000000000   0.500000000  -0.250000000
          8   0.000000000  -0.500000000  -0.250000000
          9   0.000000000  -0.500000000   0.250000000
         10   0.500000000   0.000000000  -0.250000000
         11  -0.500000000   0.000000000   0.250000000
         12   0.500000000   0.000000000   0.250000000
         13   0.500000000  -0.250000000   0.000000000
         14   0.000000000  -0.250000000   0.500000000
         15   0.000000000   0.250000000  -0.500000000
         16   0.000000000   0.250000000   0.500000000
         17   0.000000000  -0.250000000  -0.500000000
         18  -0.500000000   0.250000000   0.000000000
         19  -0.500000000   0.000000000  -0.250000000
         20  -0.500000000  -0.250000000   0.000000000
         21   0.500000000   0.250000000   0.000000000
         22  -0.250000000   0.000000000  -0.500000000
         23   0.250000000   0.500000000   0.000000000
         24  -0.250000000   0.000000000   0.500000000

     Diagonalizing the dynamical matrix

     q = (   -0.250000000   0.500000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       4.436489 [THz] =     147.985355 [cm-1]
     freq (    2) =       7.189280 [THz] =     239.808560 [cm-1]
     freq (    3) =       8.847536 [THz] =     295.122037 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        148.0  [cm-1]   --> A'                 
     freq (  2 -  2) =        239.8  [cm-1]   --> A''                
     freq (  3 -  3) =        295.1  [cm-1]   --> A'                 

     Calculation of q =    0.6250000  -0.3750000   0.8750000




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):

     too many k points
     stopping ...

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     too many k points
     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     too many k points
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points

     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     stopping ...


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...


     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points






 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):


     Error in routine set_kplusq (87808):





 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points

     too many k points




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%





 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):



     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%






 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):





 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     stopping ...
     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):



     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points

 %%%%%%%%%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points




     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...


     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     stopping ...
     stopping ...
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     too many k points
     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
    

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ..
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     too many k points
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     stopping ...
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%





 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%     too many k points
     stopping ...
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     stopping ...
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     too many k points

     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points

     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     too many k points
     Error in routine set_kplusq (87808):
     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):


     Error in routine set_kplusq (87808):
     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...

     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):


     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     stopping ...

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in rout

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Er%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%.

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%% Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stoppi%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...



     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     Error in routine set_kplusq (87808):
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     stopping ...

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...

ng ...
     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     stopping ...

     stopping ...
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
ror in routine set_kplusq (87808):
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
ine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     Error in routine set_kplusq (87808):

     too many k points

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     stopping ...
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...



     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):



     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points

     Error in routine set_kplusq (87808):
     stopping 

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     stopping ...

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points




     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
Application 21911578 exit codes: 134
Application 21911578 exit signals: Killed
Application 21911578 resources: utime ~235s, stime ~18s, Rss ~209248, inblocks ~671123, outblocks ~1524486
