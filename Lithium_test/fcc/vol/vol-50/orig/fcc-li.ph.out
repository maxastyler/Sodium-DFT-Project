
     Program PHONON v.5.2.0 starts on  3Jun2016 at 15:59:34 

     This program is part of the open-source Quantum ESPRESSO suite
     for quantum simulation of materials; please cite
         "P. Giannozzi et al., J. Phys.:Condens. Matter 21 395502 (2009);
          URL http://www.quantum-espresso.org", 
     in publications or presentations arising from this work. More details at
     http://www.quantum-espresso.org/quote

     Parallel version (MPI), running on   384 processors
     K-points division:     npool     =     384

     Reading data from directory:
     ./tmp/li-fcc.save

   Info: using nr1, nr2, nr3 values from input

   Info: using nr1, nr2, nr3 values from input

     IMPORTANT: XC functional enforced from input :
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)
     Any further DFT definition will be discarded
     Please, verify this is what you really want

 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19195     6735    1363
 


     Dynamical matrices for ( 8, 8, 8)  uniform grid of q-points
     (  29q-points):
       N         xq(1)         xq(2)         xq(3) 
       1   0.000000000   0.000000000   0.000000000
       2  -0.125000000   0.125000000  -0.125000000
       3  -0.250000000   0.250000000  -0.250000000
       4  -0.375000000   0.375000000  -0.375000000
       5   0.500000000  -0.500000000   0.500000000
       6   0.000000000   0.250000000   0.000000000
       7  -0.125000000   0.375000000  -0.125000000
       8  -0.250000000   0.500000000  -0.250000000
       9   0.625000000  -0.375000000   0.625000000
      10   0.500000000  -0.250000000   0.500000000
      11   0.375000000  -0.125000000   0.375000000
      12   0.250000000   0.000000000   0.250000000
      13   0.000000000   0.500000000   0.000000000
      14  -0.125000000   0.625000000  -0.125000000
      15   0.750000000  -0.250000000   0.750000000
      16   0.625000000  -0.125000000   0.625000000
      17   0.500000000   0.000000000   0.500000000
      18   0.000000000   0.750000000   0.000000000
      19   0.875000000  -0.125000000   0.875000000
      20   0.750000000   0.000000000   0.750000000
      21   0.000000000  -1.000000000   0.000000000
      22  -0.250000000   0.500000000   0.000000000
      23   0.625000000  -0.375000000   0.875000000
      24   0.500000000  -0.250000000   0.750000000
      25   0.750000000  -0.250000000   1.000000000
      26   0.625000000  -0.125000000   0.875000000
      27   0.500000000   0.000000000   0.750000000
      28  -0.250000000  -1.000000000   0.000000000
      29  -0.500000000  -1.000000000   0.000000000

     Calculation of q =    0.0000000   0.0000000   0.0000000

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000   0.0000000   0.0000000 )
 
     49 Sym.Ops. (with q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points=  2030  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, O_h (m-3m)  point group:


     Atomic displacements:
     There are   1 irreducible representations

     Representation     1      3 modes -T_1u G_15  G_4-  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :    16.34s CPU        32.92s WALL



     Representation #  1 modes #   1  2  3

     Self-consistent Calculation
 
     Pert. #  1: Fermi energy shift (Ry) =     1.7233E-26     1.5673E-37
     Pert. #  2: Fermi energy shift (Ry) =    -1.7691E-25    -9.9917E-38
     Pert. #  3: Fermi energy shift (Ry) =     1.2925E-26    -1.1755E-37

      iter #   1 total cpu time :    33.8 secs   av.it.:   5.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.316E-07
 
     Pert. #  1: Fermi energy shift (Ry) =     3.4466E-25     6.1224E-41
     Pert. #  2: Fermi energy shift (Ry) =     1.8956E-25     9.9488E-41
     Pert. #  3: Fermi energy shift (Ry) =    -3.4466E-26    -1.5306E-40

      iter #   2 total cpu time :    45.5 secs   av.it.:   9.4
      thresh= 3.627E-05 alpha_mix =  0.700 |ddv_scf|^2 =  8.000E-09
 
     Pert. #  1: Fermi energy shift (Ry) =     5.1699E-26     3.0612E-41
     Pert. #  2: Fermi energy shift (Ry) =     1.0555E-25     4.9744E-41
     Pert. #  3: Fermi energy shift (Ry) =     3.4466E-26    -7.6530E-41

      iter #   3 total cpu time :    59.8 secs   av.it.:   9.6
      thresh= 8.944E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.756E-11
 
     Pert. #  1: Fermi energy shift (Ry) =     3.4466E-26    -8.6096E-42
     Pert. #  2: Fermi energy shift (Ry) =     2.3695E-26    -8.3106E-42
     Pert. #  3: Fermi energy shift (Ry) =     2.0680E-25     5.9789E-42

      iter #   4 total cpu time :    69.6 secs   av.it.:   9.1
      thresh= 6.129E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.023E-13
 
     Pert. #  1: Fermi energy shift (Ry) =    -5.1699E-26    -3.1090E-42
     Pert. #  2: Fermi energy shift (Ry) =     8.1856E-26     4.7831E-43
     Pert. #  3: Fermi energy shift (Ry) =     1.2063E-25     2.6307E-42

      iter #   5 total cpu time :    72.3 secs   av.it.:   8.3
      thresh= 3.198E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.284E-15
 
     Pert. #  1: Fermi energy shift (Ry) =     1.7233E-26    -3.1090E-42
     Pert. #  2: Fermi energy shift (Ry) =     2.1757E-25     4.7831E-43
     Pert. #  3: Fermi energy shift (Ry) =     6.8932E-26     2.6307E-42

      iter #   6 total cpu time :    73.3 secs   av.it.:   8.6
      thresh= 4.779E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.800E-19

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    1
     List of q in the star:
          1   0.000000000   0.000000000   0.000000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000   0.000000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       0.145343 [THz] =       4.848126 [cm-1]
     freq (    2) =       0.145343 [THz] =       4.848126 [cm-1]
     freq (    3) =       0.145343 [THz] =       4.848126 [cm-1]
 **************************************************************************

     Mode symmetry, O_h (m-3m)  point group:

     freq (  1 -  3) =          4.8  [cm-1]   --> T_1u G_15  G_4- I  

     Calculation of q =   -0.1250000   0.1250000  -0.1250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19195     6735    1459
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     877,    6)
        NL pseudopotentials             0.12 Mb     (     877,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     877,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is        9.3 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.1250000   0.1250000  -0.1250000 )
 
      6 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_3v (3m)   point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  L_1  To be done

     Representation     2      2 modes -E    L_3  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  1m22.29s CPU     1m43.82s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   104.8 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.088E-01

      iter #   2 total cpu time :   107.2 secs   av.it.:   8.0
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  9.514E+01

      iter #   3 total cpu time :   108.4 secs   av.it.:   8.0
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.792E-04

      iter #   4 total cpu time :   110.9 secs   av.it.:   4.9
      thresh= 2.791E-03 alpha_mix =  0.700 |ddv_scf|^2 =  3.882E-08

      iter #   5 total cpu time :   114.0 secs   av.it.:   8.3
      thresh= 1.970E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.481E-10

      iter #   6 total cpu time :   115.2 secs   av.it.:   8.7
      thresh= 2.117E-06 alpha_mix =  0.700 |ddv_scf|^2 =  6.689E-11

      iter #   7 total cpu time :   116.9 secs   av.it.:   7.5
      thresh= 8.179E-07 alpha_mix =  0.700 |ddv_scf|^2 =  8.300E-09

      iter #   8 total cpu time :   118.9 secs   av.it.:   4.9
      thresh= 9.110E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.673E-13

      iter #   9 total cpu time :   121.9 secs   av.it.:   7.2
      thresh= 6.836E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.394E-13

      iter #  10 total cpu time :   129.4 secs   av.it.:   6.8
      thresh= 3.734E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.685E-14

      iter #  11 total cpu time :   138.1 secs   av.it.:   6.5
      thresh= 1.298E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.166E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   146.0 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.989E-07

      iter #   2 total cpu time :   148.9 secs   av.it.:   9.4
      thresh= 5.467E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.813E-08

      iter #   3 total cpu time :   153.4 secs   av.it.:   9.5
      thresh= 1.346E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.568E-11

      iter #   4 total cpu time :   155.6 secs   av.it.:   9.0
      thresh= 9.782E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.264E-13

      iter #   5 total cpu time :   159.4 secs   av.it.:   8.7
      thresh= 4.758E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.973E-15

      iter #   6 total cpu time :   164.7 secs   av.it.:   8.6
      thresh= 7.052E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.277E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    8
     List of q in the star:
          1  -0.125000000   0.125000000  -0.125000000
          2   0.125000000  -0.125000000  -0.125000000
          3   0.125000000  -0.125000000   0.125000000
          4  -0.125000000   0.125000000   0.125000000
          5   0.125000000   0.125000000  -0.125000000
          6  -0.125000000  -0.125000000  -0.125000000
          7  -0.125000000  -0.125000000   0.125000000
          8   0.125000000   0.125000000   0.125000000

     Diagonalizing the dynamical matrix

     q = (   -0.125000000   0.125000000  -0.125000000 ) 

 **************************************************************************
     freq (    1) =       1.475287 [THz] =      49.210271 [cm-1]
     freq (    2) =       1.475287 [THz] =      49.210271 [cm-1]
     freq (    3) =       4.450482 [THz] =     148.452096 [cm-1]
 **************************************************************************

     Mode symmetry, C_3v (3m)   point group:

     freq (  1 -  2) =         49.2  [cm-1]   --> E    L_3           
     freq (  3 -  3) =        148.5  [cm-1]   --> A_1  L_1           

     Calculation of q =   -0.2500000   0.2500000  -0.2500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19195     6735    1459
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is       29.6 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.2500000   0.2500000  -0.2500000 )
 
      6 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_3v (3m)   point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  L_1  To be done

     Representation     2      2 modes -E    L_3  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  2m59.99s CPU     3m30.76s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   211.7 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.284E-03

      iter #   2 total cpu time :   221.3 secs   av.it.:   7.8
      thresh= 3.583E-03 alpha_mix =  0.700 |ddv_scf|^2 =  4.673E-02

      iter #   3 total cpu time :   224.5 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  8.845E-08

      iter #   4 total cpu time :   235.1 secs   av.it.:   8.9
      thresh= 2.974E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.431E-09

      iter #   5 total cpu time :   243.1 secs   av.it.:   8.9
      thresh= 6.656E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.148E-10

      iter #   6 total cpu time :   248.8 secs   av.it.:   8.1
      thresh= 1.071E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.175E-13

      iter #   7 total cpu time :   249.9 secs   av.it.:   9.6
      thresh= 4.664E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.952E-14

      iter #   8 total cpu time :   250.9 secs   av.it.:   8.5
      thresh= 1.397E-08 alpha_mix =  0.700 |ddv_scf|^2 =  9.262E-14

      iter #   9 total cpu time :   255.5 secs   av.it.:   6.3
      thresh= 3.043E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.356E-14

      iter #  10 total cpu time :   257.2 secs   av.it.:   6.7
      thresh= 1.164E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.323E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   261.1 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.056E-07

      iter #   2 total cpu time :   264.0 secs   av.it.:   9.5
      thresh= 5.528E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.842E-08

      iter #   3 total cpu time :   278.5 secs   av.it.:   9.6
      thresh= 1.357E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.187E-10

      iter #   4 total cpu time :   281.5 secs   av.it.:   9.1
      thresh= 1.089E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.236E-13

      iter #   5 total cpu time :   284.0 secs   av.it.:   9.0
      thresh= 4.729E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.676E-15

      iter #   6 total cpu time :   286.9 secs   av.it.:   8.2
      thresh= 6.838E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.465E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    8
     List of q in the star:
          1  -0.250000000   0.250000000  -0.250000000
          2   0.250000000  -0.250000000  -0.250000000
          3   0.250000000  -0.250000000   0.250000000
          4  -0.250000000   0.250000000   0.250000000
          5   0.250000000   0.250000000  -0.250000000
          6  -0.250000000  -0.250000000  -0.250000000
          7  -0.250000000  -0.250000000   0.250000000
          8   0.250000000   0.250000000   0.250000000

     Diagonalizing the dynamical matrix

     q = (   -0.250000000   0.250000000  -0.250000000 ) 

 **************************************************************************
     freq (    1) =       2.760724 [THz] =      92.087828 [cm-1]
     freq (    2) =       2.760724 [THz] =      92.087828 [cm-1]
     freq (    3) =       8.862344 [THz] =     295.615960 [cm-1]
 **************************************************************************

     Mode symmetry, C_3v (3m)   point group:

     freq (  1 -  2) =         92.1  [cm-1]   --> E    L_3           
     freq (  3 -  3) =        295.6  [cm-1]   --> A_1  L_1           

     Calculation of q =   -0.3750000   0.3750000  -0.3750000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19195     6735    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     877,    6)
        NL pseudopotentials             0.12 Mb     (     877,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     877,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is       39.1 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.3750000   0.3750000  -0.3750000 )
 
      6 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 30856  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_3v (3m)   point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  L_1  To be done

     Representation     2      2 modes -E    L_3  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  4m28.26s CPU     5m13.82s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   314.8 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  8.263E-05

      iter #   2 total cpu time :   318.5 secs   av.it.:   8.5
      thresh= 9.090E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.001E-04

      iter #   3 total cpu time :   326.4 secs   av.it.:   7.0
      thresh= 1.732E-03 alpha_mix =  0.700 |ddv_scf|^2 =  6.170E-08

      iter #   4 total cpu time :   330.8 secs   av.it.:   8.7
      thresh= 2.484E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.405E-09

      iter #   5 total cpu time :   333.9 secs   av.it.:   8.8
      thresh= 5.835E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.717E-12

      iter #   6 total cpu time :   335.3 secs   av.it.:   9.1
      thresh= 1.928E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.042E-13

      iter #   7 total cpu time :   336.6 secs   av.it.:   9.0
      thresh= 4.519E-08 alpha_mix =  0.700 |ddv_scf|^2 =  9.523E-16

      iter #   8 total cpu time :   339.0 secs   av.it.:   9.5
      thresh= 3.086E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.548E-16

      iter #   9 total cpu time :   341.3 secs   av.it.:   8.5
      thresh= 2.355E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.128E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   357.7 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.119E-07

      iter #   2 total cpu time :   364.4 secs   av.it.:   9.6
      thresh= 5.585E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.871E-08

      iter #   3 total cpu time :   374.8 secs   av.it.:   9.7
      thresh= 1.368E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.338E-10

      iter #   4 total cpu time :   379.2 secs   av.it.:   9.1
      thresh= 1.157E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.300E-13

      iter #   5 total cpu time :   383.5 secs   av.it.:   9.1
      thresh= 4.796E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.608E-15

      iter #   6 total cpu time :   396.7 secs   av.it.:   8.2
      thresh= 6.788E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.193E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    8
     List of q in the star:
          1  -0.375000000   0.375000000  -0.375000000
          2   0.375000000  -0.375000000  -0.375000000
          3   0.375000000  -0.375000000   0.375000000
          4  -0.375000000   0.375000000   0.375000000
          5   0.375000000   0.375000000  -0.375000000
          6  -0.375000000  -0.375000000  -0.375000000
          7  -0.375000000  -0.375000000   0.375000000
          8   0.375000000   0.375000000   0.375000000

     Diagonalizing the dynamical matrix

     q = (   -0.375000000   0.375000000  -0.375000000 ) 

 **************************************************************************
     freq (    1) =       3.770451 [THz] =     125.768708 [cm-1]
     freq (    2) =       3.770451 [THz] =     125.768708 [cm-1]
     freq (    3) =      11.742022 [THz] =     391.671685 [cm-1]
 **************************************************************************

     Mode symmetry, C_3v (3m)   point group:

     freq (  1 -  2) =        125.8  [cm-1]   --> E    L_3           
     freq (  3 -  3) =        391.7  [cm-1]   --> A_1  L_1           

     Calculation of q =    0.5000000  -0.5000000   0.5000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19195     6735    1687
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 15428  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is       54.6 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.5000000  -0.5000000   0.5000000 )
 
     13 Sym.Ops. (with q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 15428  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, D_3d (-3m)  point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_2u L_2'  To be done

     Representation     2      2 modes -E_u  L_3'  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  6m 0.05s CPU     6m58.52s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   419.1 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.112E-05

      iter #   2 total cpu time :   431.8 secs   av.it.:   8.7
      thresh= 4.596E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.505E-06

      iter #   3 total cpu time :   437.8 secs   av.it.:   8.0
      thresh= 2.916E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.132E-08

      iter #   4 total cpu time :   451.2 secs   av.it.:   8.8
      thresh= 1.460E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.333E-11

      iter #   5 total cpu time :   469.5 secs   av.it.:   8.1
      thresh= 3.651E-07 alpha_mix =  0.700 |ddv_scf|^2 =  8.133E-13

      iter #   6 total cpu time :   478.7 secs   av.it.:   8.5
      thresh= 9.018E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.370E-15

      iter #   7 total cpu time :   479.6 secs   av.it.:   8.8
      thresh= 4.868E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.583E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   482.1 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.145E-07

      iter #   2 total cpu time :   486.6 secs   av.it.:   9.3
      thresh= 5.608E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.882E-08

      iter #   3 total cpu time :   488.8 secs   av.it.:   9.6
      thresh= 1.372E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.374E-10

      iter #   4 total cpu time :   499.1 secs   av.it.:   8.9
      thresh= 1.172E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.293E-13

      iter #   5 total cpu time :   500.3 secs   av.it.:   8.9
      thresh= 4.788E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.482E-15

      iter #   6 total cpu time :   501.4 secs   av.it.:   7.9
      thresh= 6.695E-09 alpha_mix =  0.700 |ddv_scf|^2 =  9.309E-19

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    4
     List of q in the star:
          1   0.500000000  -0.500000000   0.500000000
          2   0.500000000   0.500000000   0.500000000
          3  -0.500000000   0.500000000   0.500000000
          4   0.500000000   0.500000000  -0.500000000

     Diagonalizing the dynamical matrix

     q = (    0.500000000  -0.500000000   0.500000000 ) 

 **************************************************************************
     freq (    1) =       4.175010 [THz] =     139.263329 [cm-1]
     freq (    2) =       4.175010 [THz] =     139.263329 [cm-1]
     freq (    3) =      12.713525 [THz] =     424.077560 [cm-1]
 **************************************************************************

     Mode symmetry, D_3d (-3m)  point group:

     freq (  1 -  2) =        139.3  [cm-1]   --> E_u  L_3'          
     freq (  3 -  3) =        424.1  [cm-1]   --> A_2u L_2'          

     Calculation of q =    0.0000000   0.2500000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19195     6735    1459
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is       61.9 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000   0.2500000   0.0000000 )
 
      8 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_4v (4mm)  point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  G_1 D_1  To be done

     Representation     2      2 modes -E    G_5 D_5  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  7m25.20s CPU     8m46.98s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   527.8 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.592E-02

      iter #   2 total cpu time :   528.8 secs   av.it.:   7.9
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.239E+01

      iter #   3 total cpu time :   529.6 secs   av.it.:   7.8
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  9.266E-05

      iter #   4 total cpu time :   530.2 secs   av.it.:   6.0
      thresh= 9.626E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.061E-08

      iter #   5 total cpu time :   532.6 secs   av.it.:   8.5
      thresh= 1.750E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.374E-10

      iter #   6 total cpu time :   534.8 secs   av.it.:   8.5
      thresh= 1.172E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.967E-11

      iter #   7 total cpu time :   539.4 secs   av.it.:   8.0
      thresh= 4.435E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.241E-09

      iter #   8 total cpu time :   542.2 secs   av.it.:   4.8
      thresh= 3.523E-06 alpha_mix =  0.700 |ddv_scf|^2 =  7.980E-14

      iter #   9 total cpu time :   554.0 secs   av.it.:   8.1
      thresh= 2.825E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.069E-15

      iter #  10 total cpu time :   555.6 secs   av.it.:   8.2
      thresh= 4.549E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.309E-15

      iter #  11 total cpu time :   556.9 secs   av.it.:   6.0
      thresh= 3.618E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.151E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   570.6 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.072E-07

      iter #   2 total cpu time :   574.5 secs   av.it.:   9.4
      thresh= 5.543E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.840E-08

      iter #   3 total cpu time :   579.0 secs   av.it.:   9.5
      thresh= 1.356E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.362E-10

      iter #   4 total cpu time :   591.8 secs   av.it.:   8.8
      thresh= 1.167E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.002E-13

      iter #   5 total cpu time :   607.2 secs   av.it.:   8.8
      thresh= 4.475E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.622E-15

      iter #   6 total cpu time :   609.8 secs   av.it.:   8.4
      thresh= 6.798E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.602E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    6
     List of q in the star:
          1   0.000000000   0.250000000   0.000000000
          2   0.000000000  -0.250000000   0.000000000
          3   0.250000000   0.000000000   0.000000000
          4   0.000000000   0.000000000   0.250000000
          5   0.000000000   0.000000000  -0.250000000
          6  -0.250000000   0.000000000   0.000000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000   0.250000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       2.567129 [THz] =      85.630206 [cm-1]
     freq (    2) =       2.567129 [THz] =      85.630206 [cm-1]
     freq (    3) =       4.145792 [THz] =     138.288723 [cm-1]
 **************************************************************************

     Mode symmetry, C_4v (4mm)  point group:

     freq (  1 -  2) =         85.6  [cm-1]   --> E    G_5 D_5       
     freq (  3 -  3) =        138.3  [cm-1]   --> A_1  G_1 D_1       

     Calculation of q =   -0.1250000   0.3750000  -0.1250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    169                19195     6735    1471
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     877,    6)
        NL pseudopotentials             0.12 Mb     (     877,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     877,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.8

     total cpu time spent up to now is       86.4 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.1250000   0.3750000  -0.1250000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  9m18.31s CPU    10m48.99s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   651.7 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.514E-03

      iter #   2 total cpu time :   658.0 secs   av.it.:   7.8
      thresh= 3.891E-03 alpha_mix =  0.700 |ddv_scf|^2 =  6.980E-02

      iter #   3 total cpu time :   668.5 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  9.880E-08

      iter #   4 total cpu time :   679.0 secs   av.it.:   9.0
      thresh= 3.143E-05 alpha_mix =  0.700 |ddv_scf|^2 =  6.282E-09

      iter #   5 total cpu time :   689.2 secs   av.it.:   8.9
      thresh= 7.926E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.981E-11

      iter #   6 total cpu time :   695.0 secs   av.it.:   8.6
      thresh= 9.990E-07 alpha_mix =  0.700 |ddv_scf|^2 =  4.948E-13

      iter #   7 total cpu time :   711.7 secs   av.it.:   9.1
      thresh= 7.034E-08 alpha_mix =  0.700 |ddv_scf|^2 =  8.021E-12

      iter #   8 total cpu time :   714.9 secs   av.it.:   6.2
      thresh= 2.832E-07 alpha_mix =  0.700 |ddv_scf|^2 =  4.738E-14

      iter #   9 total cpu time :   718.6 secs   av.it.:   8.8
      thresh= 2.177E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.267E-15

      iter #  10 total cpu time :   725.4 secs   av.it.:   7.1
      thresh= 4.761E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.546E-15

      iter #  11 total cpu time :   737.1 secs   av.it.:   6.8
      thresh= 6.742E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.950E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :   749.0 secs   av.it.:   6.3
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.298E-04

      iter #   2 total cpu time :   757.5 secs   av.it.:   7.9
      thresh= 1.516E-03 alpha_mix =  0.700 |ddv_scf|^2 =  1.054E-02

      iter #   3 total cpu time :   777.2 secs   av.it.:   5.7
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  6.111E-08

      iter #   4 total cpu time :   798.8 secs   av.it.:   9.2
      thresh= 2.472E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.302E-09

      iter #   5 total cpu time :   804.1 secs   av.it.:   9.0
      thresh= 5.747E-06 alpha_mix =  0.700 |ddv_scf|^2 =  5.236E-11

      iter #   6 total cpu time :   808.5 secs   av.it.:   8.8
      thresh= 7.236E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.476E-11

      iter #   7 total cpu time :   812.1 secs   av.it.:   6.6
      thresh= 3.842E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.119E-11

      iter #   8 total cpu time :   825.0 secs   av.it.:   7.0
      thresh= 3.346E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.048E-12

      iter #   9 total cpu time :   830.6 secs   av.it.:   6.6
      thresh= 1.024E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.350E-13

      iter #  10 total cpu time :   834.3 secs   av.it.:   7.7
      thresh= 4.847E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.252E-16

      iter #  11 total cpu time :   858.4 secs   av.it.:   9.0
      thresh= 1.119E-09 alpha_mix =  0.700 |ddv_scf|^2 =  9.111E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :   867.1 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.275E-06

      iter #   2 total cpu time :   878.9 secs   av.it.:   8.6
      thresh= 1.129E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.518E-08

      iter #   3 total cpu time :   885.0 secs   av.it.:   8.9
      thresh= 2.742E-05 alpha_mix =  0.700 |ddv_scf|^2 =  7.714E-10

      iter #   4 total cpu time :   894.2 secs   av.it.:   8.2
      thresh= 2.777E-06 alpha_mix =  0.700 |ddv_scf|^2 =  8.178E-13

      iter #   5 total cpu time :   896.9 secs   av.it.:   8.3
      thresh= 9.043E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.900E-14

      iter #   6 total cpu time :   900.6 secs   av.it.:   7.7
      thresh= 1.378E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.132E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1  -0.125000000   0.375000000  -0.125000000
          2  -0.125000000   0.375000000   0.125000000
          3   0.125000000   0.375000000  -0.125000000
          4   0.125000000   0.375000000   0.125000000
          5   0.125000000  -0.375000000   0.125000000
          6   0.375000000  -0.125000000   0.125000000
          7   0.125000000  -0.125000000   0.375000000
          8  -0.125000000  -0.375000000  -0.125000000
          9   0.125000000  -0.375000000  -0.125000000
         10  -0.125000000  -0.375000000   0.125000000
         11   0.125000000  -0.125000000  -0.375000000
         12   0.375000000  -0.125000000  -0.125000000
         13  -0.375000000  -0.125000000   0.125000000
         14   0.375000000   0.125000000   0.125000000
         15  -0.125000000  -0.125000000   0.375000000
         16   0.125000000   0.125000000   0.375000000
         17  -0.375000000   0.125000000  -0.125000000
         18  -0.125000000   0.125000000  -0.375000000
         19  -0.375000000  -0.125000000  -0.125000000
         20   0.125000000   0.125000000  -0.375000000
         21   0.375000000   0.125000000  -0.125000000
         22  -0.125000000  -0.125000000  -0.375000000
         23  -0.375000000   0.125000000   0.125000000
         24  -0.125000000   0.125000000   0.375000000

     Diagonalizing the dynamical matrix

     q = (   -0.125000000   0.375000000  -0.125000000 ) 

 **************************************************************************
     freq (    1) =       3.735052 [THz] =     124.587923 [cm-1]
     freq (    2) =       4.030158 [THz] =     134.431615 [cm-1]
     freq (    3) =       7.598095 [THz] =     253.445161 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        124.6  [cm-1]   --> A''                
     freq (  2 -  2) =        134.4  [cm-1]   --> A'                 
     freq (  3 -  3) =        253.4  [cm-1]   --> A'                 

     Calculation of q =   -0.2500000   0.5000000  -0.2500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19195     6735    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.8

     total cpu time spent up to now is      123.5 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.2500000   0.5000000  -0.2500000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 13m27.26s CPU    15m45.17s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   947.8 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.016E-04

      iter #   2 total cpu time :   954.0 secs   av.it.:   8.3
      thresh= 1.008E-03 alpha_mix =  0.700 |ddv_scf|^2 =  5.697E-04

      iter #   3 total cpu time :   958.0 secs   av.it.:   6.9
      thresh= 2.387E-03 alpha_mix =  0.700 |ddv_scf|^2 =  5.706E-08

      iter #   4 total cpu time :   963.3 secs   av.it.:   9.0
      thresh= 2.389E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.375E-09

      iter #   5 total cpu time :   967.9 secs   av.it.:   9.1
      thresh= 3.708E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.895E-11

      iter #   6 total cpu time :   972.3 secs   av.it.:   8.9
      thresh= 4.353E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.822E-13

      iter #   7 total cpu time :   989.4 secs   av.it.:   9.2
      thresh= 4.269E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.758E-13

      iter #   8 total cpu time :  1000.4 secs   av.it.:   7.1
      thresh= 6.130E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.689E-15

      iter #   9 total cpu time :  1012.4 secs   av.it.:   9.1
      thresh= 6.074E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.983E-16

      iter #  10 total cpu time :  1016.5 secs   av.it.:   7.9
      thresh= 1.727E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.135E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1021.5 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.688E-05

      iter #   2 total cpu time :  1025.0 secs   av.it.:   8.7
      thresh= 5.184E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.418E-04

      iter #   3 total cpu time :  1030.6 secs   av.it.:   7.0
      thresh= 1.191E-03 alpha_mix =  0.700 |ddv_scf|^2 =  5.898E-08

      iter #   4 total cpu time :  1034.3 secs   av.it.:   9.0
      thresh= 2.429E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.885E-09

      iter #   5 total cpu time :  1038.6 secs   av.it.:   8.9
      thresh= 4.341E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.648E-11

      iter #   6 total cpu time :  1048.3 secs   av.it.:   9.2
      thresh= 4.060E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.897E-13

      iter #   7 total cpu time :  1062.6 secs   av.it.:   9.1
      thresh= 5.382E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.292E-12

      iter #   8 total cpu time :  1070.7 secs   av.it.:   7.0
      thresh= 1.137E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.615E-14

      iter #   9 total cpu time :  1074.2 secs   av.it.:   8.8
      thresh= 1.271E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.446E-14

      iter #  10 total cpu time :  1078.1 secs   av.it.:   8.0
      thresh= 1.202E-08 alpha_mix =  0.700 |ddv_scf|^2 =  9.622E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1086.6 secs   av.it.:   5.7
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.304E-06

      iter #   2 total cpu time :  1091.9 secs   av.it.:   8.6
      thresh= 1.142E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.651E-08

      iter #   3 total cpu time :  1105.2 secs   av.it.:   8.9
      thresh= 2.766E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.127E-10

      iter #   4 total cpu time :  1119.7 secs   av.it.:   8.2
      thresh= 3.021E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.073E-13

      iter #   5 total cpu time :  1129.1 secs   av.it.:   8.4
      thresh= 9.525E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.990E-14

      iter #   6 total cpu time :  1132.5 secs   av.it.:   7.8
      thresh= 1.411E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.511E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1  -0.250000000   0.500000000  -0.250000000
          2  -0.250000000   0.500000000   0.250000000
          3   0.250000000   0.500000000  -0.250000000
          4   0.250000000   0.500000000   0.250000000
          5   0.250000000  -0.500000000   0.250000000
          6   0.500000000  -0.250000000   0.250000000
          7   0.250000000  -0.250000000   0.500000000
          8  -0.250000000  -0.500000000  -0.250000000
          9   0.250000000  -0.500000000  -0.250000000
         10  -0.250000000  -0.500000000   0.250000000
         11   0.250000000  -0.250000000  -0.500000000
         12   0.500000000  -0.250000000  -0.250000000
         13  -0.500000000  -0.250000000   0.250000000
         14   0.500000000   0.250000000   0.250000000
         15  -0.250000000  -0.250000000   0.500000000
         16   0.250000000   0.250000000   0.500000000
         17  -0.500000000   0.250000000  -0.250000000
         18  -0.250000000   0.250000000  -0.500000000
         19  -0.500000000  -0.250000000  -0.250000000
         20   0.250000000   0.250000000  -0.500000000
         21   0.500000000   0.250000000  -0.250000000
         22  -0.250000000  -0.250000000  -0.500000000
         23  -0.500000000   0.250000000   0.250000000
         24  -0.250000000   0.250000000   0.500000000

     Diagonalizing the dynamical matrix

     q = (   -0.250000000   0.500000000  -0.250000000 ) 

 **************************************************************************
     freq (    1) =       4.298154 [THz] =     143.370977 [cm-1]
     freq (    2) =       5.117013 [THz] =     170.685183 [cm-1]
     freq (    3) =      10.867950 [THz] =     362.515793 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        143.4  [cm-1]   --> A''                
     freq (  2 -  2) =        170.7  [cm-1]   --> A'                 
     freq (  3 -  3) =        362.5  [cm-1]   --> A'                 

     Calculation of q =    0.6250000  -0.3750000   0.6250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19195     6735    1759
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     877,    6)
        NL pseudopotentials             0.12 Mb     (     877,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     877,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      155.6 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.6250000  -0.3750000   0.6250000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 16m49.84s CPU    19m44.29s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1187.0 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.480E-05

      iter #   2 total cpu time :  1202.2 secs   av.it.:   8.7
      thresh= 3.847E-04 alpha_mix =  0.700 |ddv_scf|^2 =  9.213E-06

      iter #   3 total cpu time :  1206.5 secs   av.it.:   7.9
      thresh= 3.035E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.779E-08

      iter #   4 total cpu time :  1214.5 secs   av.it.:   8.9
      thresh= 2.186E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.653E-09

      iter #   5 total cpu time :  1219.9 secs   av.it.:   8.9
      thresh= 6.821E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.543E-11

      iter #   6 total cpu time :  1234.3 secs   av.it.:   8.9
      thresh= 6.740E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.463E-13

      iter #   7 total cpu time :  1239.6 secs   av.it.:   9.2
      thresh= 3.824E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.022E-14

      iter #   8 total cpu time :  1242.5 secs   av.it.:   9.4
      thresh= 1.011E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.588E-16

      iter #   9 total cpu time :  1247.1 secs   av.it.:   8.8
      thresh= 2.142E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.776E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1257.8 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.982E-06

      iter #   2 total cpu time :  1261.6 secs   av.it.:   8.8
      thresh= 2.825E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.228E-06

      iter #   3 total cpu time :  1267.1 secs   av.it.:   8.1
      thresh= 1.797E-04 alpha_mix =  0.700 |ddv_scf|^2 =  9.107E-08

      iter #   4 total cpu time :  1272.2 secs   av.it.:   8.8
      thresh= 3.018E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.962E-09

      iter #   5 total cpu time :  1275.7 secs   av.it.:   8.9
      thresh= 7.721E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.927E-11

      iter #   6 total cpu time :  1281.2 secs   av.it.:   9.1
      thresh= 6.266E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.542E-13

      iter #   7 total cpu time :  1284.2 secs   av.it.:   9.4
      thresh= 3.926E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.114E-14

      iter #   8 total cpu time :  1287.6 secs   av.it.:   9.5
      thresh= 1.056E-08 alpha_mix =  0.700 |ddv_scf|^2 =  8.580E-16

      iter #   9 total cpu time :  1292.8 secs   av.it.:   8.6
      thresh= 2.929E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.599E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1301.9 secs   av.it.:   5.7
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.298E-06

      iter #   2 total cpu time :  1310.1 secs   av.it.:   8.7
      thresh= 1.139E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.649E-08

      iter #   3 total cpu time :  1319.0 secs   av.it.:   9.0
      thresh= 2.766E-05 alpha_mix =  0.700 |ddv_scf|^2 =  8.114E-10

      iter #   4 total cpu time :  1328.7 secs   av.it.:   8.3
      thresh= 2.849E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.420E-13

      iter #   5 total cpu time :  1333.6 secs   av.it.:   8.4
      thresh= 9.706E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.977E-14

      iter #   6 total cpu time :  1339.6 secs   av.it.:   7.8
      thresh= 1.406E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.187E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.625000000  -0.375000000   0.625000000
          2   0.625000000  -0.375000000  -0.625000000
          3  -0.625000000  -0.375000000   0.625000000
          4  -0.625000000  -0.375000000  -0.625000000
          5  -0.625000000   0.375000000  -0.625000000
          6  -0.375000000   0.625000000  -0.625000000
          7  -0.625000000   0.625000000  -0.375000000
          8   0.625000000   0.375000000   0.625000000
          9  -0.625000000   0.375000000   0.625000000
         10   0.625000000   0.375000000  -0.625000000
         11  -0.625000000   0.625000000   0.375000000
         12  -0.375000000   0.625000000   0.625000000
         13   0.375000000   0.625000000  -0.625000000
         14  -0.375000000  -0.625000000  -0.625000000
         15   0.625000000   0.625000000  -0.375000000
         16  -0.625000000  -0.625000000  -0.375000000
         17   0.375000000  -0.625000000   0.625000000
         18   0.625000000  -0.625000000   0.375000000
         19   0.375000000   0.625000000   0.625000000
         20  -0.625000000  -0.625000000   0.375000000
         21  -0.375000000  -0.625000000   0.625000000
         22   0.625000000   0.625000000   0.375000000
         23   0.375000000  -0.625000000  -0.625000000
         24   0.625000000  -0.625000000  -0.375000000

     Diagonalizing the dynamical matrix

     q = (    0.625000000  -0.375000000   0.625000000 ) 

 **************************************************************************
     freq (    1) =       4.448388 [THz] =     148.382267 [cm-1]
     freq (    2) =       5.969824 [THz] =     199.131909 [cm-1]
     freq (    3) =      12.400974 [THz] =     413.651967 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        148.4  [cm-1]   --> A''                
     freq (  2 -  2) =        199.1  [cm-1]   --> A'                 
     freq (  3 -  3) =        413.7  [cm-1]   --> A'                 

     Calculation of q =    0.5000000  -0.2500000   0.5000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19195     6735    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.8

     total cpu time spent up to now is      193.0 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.5000000  -0.2500000   0.5000000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 20m 2.14s CPU    23m23.87s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1406.5 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.313E-05

      iter #   2 total cpu time :  1417.2 secs   av.it.:   8.7
      thresh= 3.623E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.375E-05

      iter #   3 total cpu time :  1428.2 secs   av.it.:   7.8
      thresh= 3.708E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.131E-07

      iter #   4 total cpu time :  1435.1 secs   av.it.:   8.8
      thresh= 3.363E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.251E-09

      iter #   5 total cpu time :  1444.6 secs   av.it.:   9.0
      thresh= 5.702E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.511E-11

      iter #   6 total cpu time :  1460.1 secs   av.it.:   9.1
      thresh= 5.925E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.486E-13

      iter #   7 total cpu time :  1467.5 secs   av.it.:   9.2
      thresh= 3.855E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.712E-14

      iter #   8 total cpu time :  1471.1 secs   av.it.:   9.1
      thresh= 1.309E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.273E-14

      iter #   9 total cpu time :  1475.7 secs   av.it.:   8.0
      thresh= 1.128E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.548E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1481.8 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.101E-05

      iter #   2 total cpu time :  1493.0 secs   av.it.:   8.7
      thresh= 4.584E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.722E-05

      iter #   3 total cpu time :  1502.2 secs   av.it.:   7.7
      thresh= 5.217E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.026E-08

      iter #   4 total cpu time :  1512.8 secs   av.it.:   9.0
      thresh= 2.006E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.914E-09

      iter #   5 total cpu time :  1516.4 secs   av.it.:   9.0
      thresh= 4.374E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.248E-11

      iter #   6 total cpu time :  1522.3 secs   av.it.:   8.9
      thresh= 6.518E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.613E-13

      iter #   7 total cpu time :  1528.1 secs   av.it.:   9.3
      thresh= 4.016E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.757E-14

      iter #   8 total cpu time :  1539.7 secs   av.it.:   9.1
      thresh= 1.325E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.388E-14

      iter #   9 total cpu time :  1558.9 secs   av.it.:   8.1
      thresh= 1.178E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.992E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1571.8 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.263E-06

      iter #   2 total cpu time :  1578.2 secs   av.it.:   8.7
      thresh= 1.124E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.520E-08

      iter #   3 total cpu time :  1582.8 secs   av.it.:   9.0
      thresh= 2.742E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.889E-10

      iter #   4 total cpu time :  1587.0 secs   av.it.:   8.4
      thresh= 2.427E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.026E-13

      iter #   5 total cpu time :  1589.6 secs   av.it.:   8.5
      thresh= 9.501E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.895E-14

      iter #   6 total cpu time :  1593.8 secs   av.it.:   6.9
      thresh= 1.377E-08 alpha_mix =  0.700 |ddv_scf|^2 =  6.686E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.500000000  -0.250000000   0.500000000
          2   0.500000000  -0.250000000  -0.500000000
          3  -0.500000000  -0.250000000   0.500000000
          4  -0.500000000  -0.250000000  -0.500000000
          5  -0.500000000   0.250000000  -0.500000000
          6  -0.250000000   0.500000000  -0.500000000
          7  -0.500000000   0.500000000  -0.250000000
          8   0.500000000   0.250000000   0.500000000
          9  -0.500000000   0.250000000   0.500000000
         10   0.500000000   0.250000000  -0.500000000
         11  -0.500000000   0.500000000   0.250000000
         12  -0.250000000   0.500000000   0.500000000
         13   0.250000000   0.500000000  -0.500000000
         14  -0.250000000  -0.500000000  -0.500000000
         15   0.500000000   0.500000000  -0.250000000
         16  -0.500000000  -0.500000000  -0.250000000
         17   0.250000000  -0.500000000   0.500000000
         18   0.500000000  -0.500000000   0.250000000
         19   0.250000000   0.500000000   0.500000000
         20  -0.500000000  -0.500000000   0.250000000
         21  -0.250000000  -0.500000000   0.500000000
         22   0.500000000   0.500000000   0.250000000
         23   0.250000000  -0.500000000  -0.500000000
         24   0.500000000  -0.500000000  -0.250000000

     Diagonalizing the dynamical matrix

     q = (    0.500000000  -0.250000000   0.500000000 ) 

 **************************************************************************
     freq (    1) =       4.192021 [THz] =     139.830785 [cm-1]
     freq (    2) =       6.551337 [THz] =     218.529078 [cm-1]
     freq (    3) =      12.117270 [THz] =     404.188630 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        139.8  [cm-1]   --> A''                
     freq (  2 -  2) =        218.5  [cm-1]   --> A'                 
     freq (  3 -  3) =        404.2  [cm-1]   --> A'                 

     Calculation of q =    0.3750000  -0.1250000   0.3750000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    169                19195     6735    1471
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     877,    6)
        NL pseudopotentials             0.12 Mb     (     877,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     877,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.8

     total cpu time spent up to now is      232.6 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.3750000  -0.1250000   0.3750000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 23m33.32s CPU    27m42.80s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1665.4 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.305E-05

      iter #   2 total cpu time :  1668.7 secs   av.it.:   8.2
      thresh= 8.547E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.194E-04

      iter #   3 total cpu time :  1672.8 secs   av.it.:   6.5
      thresh= 2.682E-03 alpha_mix =  0.700 |ddv_scf|^2 =  5.008E-08

      iter #   4 total cpu time :  1680.5 secs   av.it.:   9.1
      thresh= 2.238E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.135E-09

      iter #   5 total cpu time :  1691.5 secs   av.it.:   8.8
      thresh= 4.620E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.198E-11

      iter #   6 total cpu time :  1696.9 secs   av.it.:   9.1
      thresh= 3.461E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.271E-12

      iter #   7 total cpu time :  1710.6 secs   av.it.:   8.8
      thresh= 1.127E-07 alpha_mix =  0.700 |ddv_scf|^2 =  8.139E-12

      iter #   8 total cpu time :  1729.0 secs   av.it.:   6.9
      thresh= 2.853E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.119E-14

      iter #   9 total cpu time :  1747.8 secs   av.it.:   9.0
      thresh= 1.058E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.492E-14

      iter #  10 total cpu time :  1753.0 secs   av.it.:   6.9
      thresh= 1.869E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.258E-16

      iter #  11 total cpu time :  1758.9 secs   av.it.:   9.2
      thresh= 1.122E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.346E-19

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1766.6 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.904E-04

      iter #   2 total cpu time :  1772.7 secs   av.it.:   8.1
      thresh= 1.380E-03 alpha_mix =  0.700 |ddv_scf|^2 =  1.911E-03

      iter #   3 total cpu time :  1778.6 secs   av.it.:   6.5
      thresh= 4.372E-03 alpha_mix =  0.700 |ddv_scf|^2 =  8.339E-08

      iter #   4 total cpu time :  1783.5 secs   av.it.:   8.9
      thresh= 2.888E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.679E-09

      iter #   5 total cpu time :  1795.8 secs   av.it.:   9.1
      thresh= 4.097E-06 alpha_mix =  0.700 |ddv_scf|^2 =  5.090E-11

      iter #   6 total cpu time :  1800.4 secs   av.it.:   8.7
      thresh= 7.135E-07 alpha_mix =  0.700 |ddv_scf|^2 =  8.582E-13

      iter #   7 total cpu time :  1811.2 secs   av.it.:   9.2
      thresh= 9.264E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.744E-12

      iter #   8 total cpu time :  1833.9 secs   av.it.:   6.9
      thresh= 2.397E-07 alpha_mix =  0.700 |ddv_scf|^2 =  7.150E-15

      iter #   9 total cpu time :  1840.4 secs   av.it.:   8.6
      thresh= 8.456E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.977E-15

      iter #  10 total cpu time :  1843.1 secs   av.it.:   7.6
      thresh= 7.054E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.669E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1848.8 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.220E-06

      iter #   2 total cpu time :  1852.2 secs   av.it.:   8.6
      thresh= 1.104E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.365E-08

      iter #   3 total cpu time :  1856.6 secs   av.it.:   9.0
      thresh= 2.714E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.290E-10

      iter #   4 total cpu time :  1863.9 secs   av.it.:   8.5
      thresh= 2.071E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.226E-13

      iter #   5 total cpu time :  1869.3 secs   av.it.:   8.3
      thresh= 9.605E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.847E-14

      iter #   6 total cpu time :  1879.1 secs   av.it.:   7.6
      thresh= 1.359E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.666E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.375000000  -0.125000000   0.375000000
          2   0.375000000  -0.125000000  -0.375000000
          3  -0.375000000  -0.125000000   0.375000000
          4  -0.375000000  -0.125000000  -0.375000000
          5  -0.375000000   0.125000000  -0.375000000
          6  -0.125000000   0.375000000  -0.375000000
          7  -0.375000000   0.375000000  -0.125000000
          8   0.375000000   0.125000000   0.375000000
          9  -0.375000000   0.125000000   0.375000000
         10   0.375000000   0.125000000  -0.375000000
         11  -0.375000000   0.375000000   0.125000000
         12  -0.125000000   0.375000000   0.375000000
         13   0.125000000   0.375000000  -0.375000000
         14  -0.125000000  -0.375000000  -0.375000000
         15   0.375000000   0.375000000  -0.125000000
         16  -0.375000000  -0.375000000  -0.125000000
         17   0.125000000  -0.375000000   0.375000000
         18   0.375000000  -0.375000000   0.125000000
         19   0.125000000   0.375000000   0.375000000
         20  -0.375000000  -0.375000000   0.125000000
         21  -0.125000000  -0.375000000   0.375000000
         22   0.375000000   0.375000000   0.125000000
         23   0.125000000  -0.375000000  -0.375000000
         24   0.375000000  -0.375000000  -0.125000000

     Diagonalizing the dynamical matrix

     q = (    0.375000000  -0.125000000   0.375000000 ) 

 **************************************************************************
     freq (    1) =       3.159428 [THz] =     105.387175 [cm-1]
     freq (    2) =       6.258871 [THz] =     208.773465 [cm-1]
     freq (    3) =       9.942847 [THz] =     331.657664 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        105.4  [cm-1]   --> A''                
     freq (  2 -  2) =        208.8  [cm-1]   --> A'                 
     freq (  3 -  3) =        331.7  [cm-1]   --> A'                 

     Calculation of q =    0.2500000   0.0000000   0.2500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19195     6735    1459
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine seqopn (24):
     error opening ./tmp/_ph0/li-fcc.igk301
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
Application 21910615 exit codes: 134
Application 21910615 exit signals: Killed
Application 21910615 resources: utime ~1743s, stime ~26s, Rss ~180748, inblocks ~1137703, outblocks ~2538219

     Program PHONON v.5.2.0 starts on  3Jun2016 at 17: 5:16 

     This program is part of the open-source Quantum ESPRESSO suite
     for quantum simulation of materials; please cite
         "P. Giannozzi et al., J. Phys.:Condens. Matter 21 395502 (2009);
          URL http://www.quantum-espresso.org", 
     in publications or presentations arising from this work. More details at
     http://www.quantum-espresso.org/quote

     Parallel version (MPI), running on   384 processors
     K-points division:     npool     =     384

     Reading data from directory:
     ./tmp/li-fcc.save

   Info: using nr1, nr2, nr3 values from input

   Info: using nr1, nr2, nr3 values from input

     IMPORTANT: XC functional enforced from input :
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)
     Any further DFT definition will be discarded
     Please, verify this is what you really want

 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19195     6735    1363
 


     Dynamical matrices for ( 8, 8, 8)  uniform grid of q-points
     (  29q-points):
       N         xq(1)         xq(2)         xq(3) 
       1   0.000000000   0.000000000   0.000000000
       2  -0.125000000   0.125000000  -0.125000000
       3  -0.250000000   0.250000000  -0.250000000
       4  -0.375000000   0.375000000  -0.375000000
       5   0.500000000  -0.500000000   0.500000000
       6   0.000000000   0.250000000   0.000000000
       7  -0.125000000   0.375000000  -0.125000000
       8  -0.250000000   0.500000000  -0.250000000
       9   0.625000000  -0.375000000   0.625000000
      10   0.500000000  -0.250000000   0.500000000
      11   0.375000000  -0.125000000   0.375000000
      12   0.250000000   0.000000000   0.250000000
      13   0.000000000   0.500000000   0.000000000
      14  -0.125000000   0.625000000  -0.125000000
      15   0.750000000  -0.250000000   0.750000000
      16   0.625000000  -0.125000000   0.625000000
      17   0.500000000   0.000000000   0.500000000
      18   0.000000000   0.750000000   0.000000000
      19   0.875000000  -0.125000000   0.875000000
      20   0.750000000   0.000000000   0.750000000
      21   0.000000000  -1.000000000   0.000000000
      22  -0.250000000   0.500000000   0.000000000
      23   0.625000000  -0.375000000   0.875000000
      24   0.500000000  -0.250000000   0.750000000
      25   0.750000000  -0.250000000   1.000000000
      26   0.625000000  -0.125000000   0.875000000
      27   0.500000000   0.000000000   0.750000000
      28  -0.250000000  -1.000000000   0.000000000
      29  -0.500000000  -1.000000000   0.000000000

     Calculation of q =    0.2500000   0.0000000   0.2500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    163                19195     6735    1459
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is       12.5 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.2500000   0.0000000   0.2500000 )
 
      4 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_2v (mm2)  point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A_1  D_1  S_1  To be done

     Representation     2      1 modes -B_1  D_3  S_3  To be done

     Representation     3      1 modes -B_2  D_4  S_4  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :    31.76s CPU        47.27s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :    48.7 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.672E-03

      iter #   2 total cpu time :    51.7 secs   av.it.:   7.5
      thresh= 6.835E-03 alpha_mix =  0.700 |ddv_scf|^2 =  4.364E-01

      iter #   3 total cpu time :    53.1 secs   av.it.:   6.9
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.338E-08

      iter #   4 total cpu time :    57.6 secs   av.it.:   9.1
      thresh= 2.709E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.006E-08

      iter #   5 total cpu time :    73.0 secs   av.it.:   8.7
      thresh= 1.003E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.643E-10

      iter #   6 total cpu time :    76.8 secs   av.it.:   7.9
      thresh= 1.626E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.894E-13

      iter #   7 total cpu time :    90.1 secs   av.it.:   9.3
      thresh= 4.352E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.156E-14

      iter #   8 total cpu time :    94.0 secs   av.it.:   8.2
      thresh= 2.271E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.556E-13

      iter #   9 total cpu time :    97.1 secs   av.it.:   5.5
      thresh= 5.963E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.046E-15

      iter #  10 total cpu time :   100.1 secs   av.it.:   7.5
      thresh= 4.523E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.390E-16

      iter #  11 total cpu time :   105.3 secs   av.it.:   7.7
      thresh= 1.179E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.157E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :   110.5 secs   av.it.:   5.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.193E-06

      iter #   2 total cpu time :   112.8 secs   av.it.:   8.6
      thresh= 1.092E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.251E-08

      iter #   3 total cpu time :   114.2 secs   av.it.:   8.9
      thresh= 2.693E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.495E-10

      iter #   4 total cpu time :   115.6 secs   av.it.:   8.5
      thresh= 1.869E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.425E-13

      iter #   5 total cpu time :   117.5 secs   av.it.:   8.0
      thresh= 9.708E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.934E-14

      iter #   6 total cpu time :   119.3 secs   av.it.:   7.6
      thresh= 1.391E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.954E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :   122.4 secs   av.it.:   5.7
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.305E-06

      iter #   2 total cpu time :   124.4 secs   av.it.:   8.7
      thresh= 1.143E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.439E-08

      iter #   3 total cpu time :   125.9 secs   av.it.:   9.0
      thresh= 2.728E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.021E-10

      iter #   4 total cpu time :   128.3 secs   av.it.:   8.2
      thresh= 3.003E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.240E-12

      iter #   5 total cpu time :   129.9 secs   av.it.:   8.6
      thresh= 1.114E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.670E-14

      iter #   6 total cpu time :   131.7 secs   av.it.:   8.3
      thresh= 1.292E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.606E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   12
     List of q in the star:
          1   0.250000000   0.000000000   0.250000000
          2  -0.250000000  -0.250000000   0.000000000
          3  -0.250000000   0.250000000   0.000000000
          4  -0.250000000   0.000000000  -0.250000000
          5  -0.250000000   0.000000000   0.250000000
          6   0.250000000   0.000000000  -0.250000000
          7   0.000000000   0.250000000   0.250000000
          8   0.000000000   0.250000000  -0.250000000
          9   0.000000000  -0.250000000  -0.250000000
         10   0.250000000   0.250000000   0.000000000
         11   0.250000000  -0.250000000   0.000000000
         12   0.000000000  -0.250000000   0.250000000

     Diagonalizing the dynamical matrix

     q = (    0.250000000   0.000000000   0.250000000 ) 

 **************************************************************************
     freq (    1) =       1.892219 [THz] =      63.117624 [cm-1]
     freq (    2) =       4.675073 [THz] =     155.943634 [cm-1]
     freq (    3) =       6.525305 [THz] =     217.660751 [cm-1]
 **************************************************************************

     Mode symmetry, C_2v (mm2)  point group:

     freq (  1 -  1) =         63.1  [cm-1]   --> B_1  D_3  S_3      
     freq (  2 -  2) =        155.9  [cm-1]   --> B_2  D_4  S_4      
     freq (  3 -  3) =        217.7  [cm-1]   --> A_1  D_1  S_1      

     Calculation of q =    0.0000000   0.5000000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    169                19195     6735    1471
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is       23.5 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000   0.5000000   0.0000000 )
 
      8 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_4v (4mm)  point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  G_1 D_1  To be done

     Representation     2      2 modes -E    G_5 D_5  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  1m51.15s CPU     2m25.21s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   146.0 secs   av.it.:   6.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  5.326E-04

      iter #   2 total cpu time :   150.8 secs   av.it.:   8.0
      thresh= 2.308E-03 alpha_mix =  0.700 |ddv_scf|^2 =  1.016E-02

      iter #   3 total cpu time :   151.7 secs   av.it.:   6.3
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.302E-07

      iter #   4 total cpu time :   154.6 secs   av.it.:   8.8
      thresh= 3.609E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.169E-09

      iter #   5 total cpu time :   160.4 secs   av.it.:   8.9
      thresh= 6.457E-06 alpha_mix =  0.700 |ddv_scf|^2 =  7.267E-11

      iter #   6 total cpu time :   170.7 secs   av.it.:   8.5
      thresh= 8.525E-07 alpha_mix =  0.700 |ddv_scf|^2 =  9.792E-14

      iter #   7 total cpu time :   184.5 secs   av.it.:   9.4
      thresh= 3.129E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.950E-14

      iter #   8 total cpu time :   186.7 secs   av.it.:   8.2
      thresh= 1.396E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.220E-15

      iter #   9 total cpu time :   191.1 secs   av.it.:   7.6
      thresh= 7.225E-09 alpha_mix =  0.700 |ddv_scf|^2 =  8.720E-16

      iter #  10 total cpu time :   198.1 secs   av.it.:   7.5
      thresh= 2.953E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.142E-16

      iter #  11 total cpu time :   204.5 secs   av.it.:   8.4
      thresh= 1.069E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.686E-19

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   211.0 secs   av.it.:   5.8
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.382E-07

      iter #   2 total cpu time :   213.9 secs   av.it.:   9.5
      thresh= 5.816E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.925E-08

      iter #   3 total cpu time :   219.6 secs   av.it.:   9.7
      thresh= 1.388E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.927E-10

      iter #   4 total cpu time :   222.0 secs   av.it.:   8.6
      thresh= 1.711E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.958E-13

      iter #   5 total cpu time :   224.9 secs   av.it.:   8.9
      thresh= 4.425E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.008E-15

      iter #   6 total cpu time :   227.1 secs   av.it.:   8.9
      thresh= 7.077E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.747E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    6
     List of q in the star:
          1   0.000000000   0.500000000   0.000000000
          2   0.000000000  -0.500000000   0.000000000
          3   0.000000000   0.000000000  -0.500000000
          4   0.500000000   0.000000000   0.000000000
          5  -0.500000000   0.000000000   0.000000000
          6   0.000000000   0.000000000   0.500000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000   0.500000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       5.266709 [THz] =     175.678486 [cm-1]
     freq (    2) =       5.266709 [THz] =     175.678486 [cm-1]
     freq (    3) =       8.011813 [THz] =     267.245299 [cm-1]
 **************************************************************************

     Mode symmetry, C_4v (4mm)  point group:

     freq (  1 -  2) =        175.7  [cm-1]   --> E    G_5 D_5       
     freq (  3 -  3) =        267.2  [cm-1]   --> A_1  G_1 D_1       

     Calculation of q =   -0.1250000   0.6250000  -0.1250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19195     6735    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     877,    6)
        NL pseudopotentials             0.12 Mb     (     877,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     877,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is       48.6 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.1250000   0.6250000  -0.1250000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  3m50.31s CPU     4m33.85s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   276.6 secs   av.it.:   6.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  7.747E-05

      iter #   2 total cpu time :   286.6 secs   av.it.:   8.4
      thresh= 8.802E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.080E-04

      iter #   3 total cpu time :   306.6 secs   av.it.:   7.1
      thresh= 1.755E-03 alpha_mix =  0.700 |ddv_scf|^2 =  5.752E-08

      iter #   4 total cpu time :   317.3 secs   av.it.:   9.0
      thresh= 2.398E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.973E-10

      iter #   5 total cpu time :   325.8 secs   av.it.:   9.0
      thresh= 3.158E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.191E-11

      iter #   6 total cpu time :   330.0 secs   av.it.:   8.9
      thresh= 3.452E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.166E-13

      iter #   7 total cpu time :   333.0 secs   av.it.:   9.6
      thresh= 3.414E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.794E-15

      iter #   8 total cpu time :   336.2 secs   av.it.:   9.2
      thresh= 4.236E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.229E-15

      iter #   9 total cpu time :   339.4 secs   av.it.:   7.5
      thresh= 6.503E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.101E-16

      iter #  10 total cpu time :   342.7 secs   av.it.:   8.8
      thresh= 1.449E-09 alpha_mix =  0.700 |ddv_scf|^2 =  8.289E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :   349.6 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.044E-05

      iter #   2 total cpu time :   353.0 secs   av.it.:   8.8
      thresh= 3.231E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.593E-05

      iter #   3 total cpu time :   357.0 secs   av.it.:   7.1
      thresh= 5.994E-04 alpha_mix =  0.700 |ddv_scf|^2 =  6.231E-08

      iter #   4 total cpu time :   360.6 secs   av.it.:   9.0
      thresh= 2.496E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.151E-09

      iter #   5 total cpu time :   363.5 secs   av.it.:   8.8
      thresh= 3.393E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.982E-12

      iter #   6 total cpu time :   367.6 secs   av.it.:   9.1
      thresh= 2.232E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.520E-13

      iter #   7 total cpu time :   372.2 secs   av.it.:   9.0
      thresh= 3.899E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.074E-13

      iter #   8 total cpu time :   385.1 secs   av.it.:   7.6
      thresh= 3.277E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.939E-15

      iter #   9 total cpu time :   388.6 secs   av.it.:   8.9
      thresh= 6.276E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.572E-15

      iter #  10 total cpu time :   391.8 secs   av.it.:   7.7
      thresh= 8.107E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.436E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :   395.8 secs   av.it.:   5.8
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.409E-06

      iter #   2 total cpu time :   398.8 secs   av.it.:   8.6
      thresh= 1.187E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.859E-08

      iter #   3 total cpu time :   403.2 secs   av.it.:   8.9
      thresh= 2.803E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.484E-09

      iter #   4 total cpu time :   406.7 secs   av.it.:   7.6
      thresh= 3.852E-06 alpha_mix =  0.700 |ddv_scf|^2 =  8.389E-13

      iter #   5 total cpu time :   411.8 secs   av.it.:   8.5
      thresh= 9.159E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.933E-14

      iter #   6 total cpu time :   416.4 secs   av.it.:   8.1
      thresh= 1.390E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.791E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1  -0.125000000   0.625000000  -0.125000000
          2  -0.125000000   0.625000000   0.125000000
          3   0.125000000   0.625000000  -0.125000000
          4   0.125000000   0.625000000   0.125000000
          5   0.125000000  -0.625000000   0.125000000
          6   0.125000000  -0.625000000  -0.125000000
          7  -0.125000000  -0.625000000  -0.125000000
          8   0.125000000   0.125000000  -0.625000000
          9  -0.125000000  -0.625000000   0.125000000
         10   0.625000000  -0.125000000  -0.125000000
         11  -0.625000000  -0.125000000   0.125000000
         12   0.625000000   0.125000000   0.125000000
         13   0.625000000  -0.125000000   0.125000000
         14  -0.125000000  -0.125000000   0.625000000
         15  -0.125000000   0.125000000  -0.625000000
         16   0.125000000   0.125000000   0.625000000
         17   0.125000000  -0.125000000  -0.625000000
         18  -0.625000000   0.125000000  -0.125000000
         19   0.125000000  -0.125000000   0.625000000
         20  -0.625000000  -0.125000000  -0.125000000
         21   0.625000000   0.125000000  -0.125000000
         22  -0.125000000  -0.125000000  -0.625000000
         23  -0.625000000   0.125000000   0.125000000
         24  -0.125000000   0.125000000   0.625000000

     Diagonalizing the dynamical matrix

     q = (   -0.125000000   0.625000000  -0.125000000 ) 

 **************************************************************************
     freq (    1) =       6.095414 [THz] =     203.321130 [cm-1]
     freq (    2) =       7.401255 [THz] =     246.879293 [cm-1]
     freq (    3) =      10.429930 [THz] =     347.905002 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        203.3  [cm-1]   --> A''                
     freq (  2 -  2) =        246.9  [cm-1]   --> A'                 
     freq (  3 -  3) =        347.9  [cm-1]   --> A'                 

     Calculation of q =    0.7500000  -0.2500000   0.7500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19195     6735    1807
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.8

     total cpu time spent up to now is       77.5 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.7500000  -0.2500000   0.7500000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  6m30.96s CPU     7m45.32s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   468.1 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.499E-05

      iter #   2 total cpu time :   473.3 secs   av.it.:   8.7
      thresh= 3.872E-04 alpha_mix =  0.700 |ddv_scf|^2 =  9.499E-06

      iter #   3 total cpu time :   478.7 secs   av.it.:   7.9
      thresh= 3.082E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.665E-08

      iter #   4 total cpu time :   494.0 secs   av.it.:   8.9
      thresh= 1.633E-05 alpha_mix =  0.700 |ddv_scf|^2 =  8.704E-10

      iter #   5 total cpu time :   504.1 secs   av.it.:   8.9
      thresh= 2.950E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.422E-11

      iter #   6 total cpu time :   515.7 secs   av.it.:   8.6
      thresh= 3.771E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.168E-13

      iter #   7 total cpu time :   518.6 secs   av.it.:   9.1
      thresh= 3.417E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.057E-14

      iter #   8 total cpu time :   526.0 secs   av.it.:   9.3
      thresh= 1.028E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.558E-16

      iter #   9 total cpu time :   530.8 secs   av.it.:   9.1
      thresh= 1.248E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.583E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :   541.6 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.700E-06

      iter #   2 total cpu time :   556.1 secs   av.it.:   8.9
      thresh= 2.168E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.493E-06

      iter #   3 total cpu time :   563.9 secs   av.it.:   8.2
      thresh= 1.222E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.188E-08

      iter #   4 total cpu time :   579.2 secs   av.it.:   8.8
      thresh= 2.861E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.988E-09

      iter #   5 total cpu time :   588.8 secs   av.it.:   8.9
      thresh= 4.459E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.362E-11

      iter #   6 total cpu time :   594.0 secs   av.it.:   9.1
      thresh= 3.691E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.656E-13

      iter #   7 total cpu time :   598.0 secs   av.it.:   9.1
      thresh= 4.069E-08 alpha_mix =  0.700 |ddv_scf|^2 =  8.797E-15

      iter #   8 total cpu time :   602.3 secs   av.it.:   9.4
      thresh= 9.379E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.371E-16

      iter #   9 total cpu time :   625.0 secs   av.it.:   8.9
      thresh= 1.540E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.583E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :   629.5 secs   av.it.:   5.8
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.404E-06

      iter #   2 total cpu time :   632.5 secs   av.it.:   8.6
      thresh= 1.185E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.911E-08

      iter #   3 total cpu time :   636.2 secs   av.it.:   8.9
      thresh= 2.813E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.515E-09

      iter #   4 total cpu time :   650.5 secs   av.it.:   7.8
      thresh= 3.892E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.422E-13

      iter #   5 total cpu time :   653.6 secs   av.it.:   8.5
      thresh= 9.707E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.007E-14

      iter #   6 total cpu time :   657.0 secs   av.it.:   8.2
      thresh= 1.417E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.217E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.750000000  -0.250000000   0.750000000
          2   0.750000000  -0.250000000  -0.750000000
          3  -0.750000000  -0.250000000   0.750000000
          4  -0.750000000  -0.250000000  -0.750000000
          5  -0.750000000   0.250000000  -0.750000000
          6  -0.750000000   0.250000000   0.750000000
          7   0.750000000   0.250000000   0.750000000
          8  -0.750000000  -0.750000000   0.250000000
          9   0.750000000   0.250000000  -0.750000000
         10  -0.250000000   0.750000000   0.750000000
         11   0.250000000   0.750000000  -0.750000000
         12  -0.250000000  -0.750000000  -0.750000000
         13  -0.250000000   0.750000000  -0.750000000
         14   0.750000000   0.750000000  -0.250000000
         15   0.750000000  -0.750000000   0.250000000
         16  -0.750000000  -0.750000000  -0.250000000
         17  -0.750000000   0.750000000   0.250000000
         18   0.250000000  -0.750000000   0.750000000
         19  -0.750000000   0.750000000  -0.250000000
         20   0.250000000   0.750000000   0.750000000
         21  -0.250000000  -0.750000000   0.750000000
         22   0.750000000   0.750000000   0.250000000
         23   0.250000000  -0.750000000  -0.750000000
         24   0.750000000  -0.750000000  -0.250000000

     Diagonalizing the dynamical matrix

     q = (    0.750000000  -0.250000000   0.750000000 ) 

 **************************************************************************
     freq (    1) =       5.825819 [THz] =     194.328398 [cm-1]
     freq (    2) =       9.075739 [THz] =     302.734081 [cm-1]
     freq (    3) =      12.052981 [THz] =     402.044184 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        194.3  [cm-1]   --> A''                
     freq (  2 -  2) =        302.7  [cm-1]   --> A'                 
     freq (  3 -  3) =        402.0  [cm-1]   --> A'                 

     Calculation of q =    0.6250000  -0.1250000   0.6250000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19195     6735    1687
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     877,    6)
        NL pseudopotentials             0.12 Mb     (     877,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     877,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      120.4 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.6250000  -0.1250000   0.6250000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       :  9m48.58s CPU    11m40.97s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   703.7 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  5.971E-06

      iter #   2 total cpu time :   707.6 secs   av.it.:   8.9
      thresh= 2.443E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.813E-07

      iter #   3 total cpu time :   712.5 secs   av.it.:   8.4
      thresh= 9.388E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.012E-08

      iter #   4 total cpu time :   724.5 secs   av.it.:   8.9
      thresh= 1.736E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.447E-09

      iter #   5 total cpu time :   728.6 secs   av.it.:   8.8
      thresh= 4.946E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.628E-11

      iter #   6 total cpu time :   732.4 secs   av.it.:   8.8
      thresh= 4.035E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.842E-13

      iter #   7 total cpu time :   736.8 secs   av.it.:   9.1
      thresh= 4.292E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.508E-14

      iter #   8 total cpu time :   741.5 secs   av.it.:   9.1
      thresh= 1.228E-08 alpha_mix =  0.700 |ddv_scf|^2 =  5.689E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :   747.0 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  8.594E-06

      iter #   2 total cpu time :   752.0 secs   av.it.:   8.8
      thresh= 2.932E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.382E-06

      iter #   3 total cpu time :   756.2 secs   av.it.:   8.1
      thresh= 1.543E-04 alpha_mix =  0.700 |ddv_scf|^2 =  1.967E-08

      iter #   4 total cpu time :   760.6 secs   av.it.:   9.0
      thresh= 1.402E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.207E-10

      iter #   5 total cpu time :   767.4 secs   av.it.:   9.0
      thresh= 2.282E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.715E-11

      iter #   6 total cpu time :   771.2 secs   av.it.:   8.8
      thresh= 4.141E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.757E-13

      iter #   7 total cpu time :   774.5 secs   av.it.:   9.1
      thresh= 5.251E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.307E-14

      iter #   8 total cpu time :   778.3 secs   av.it.:   9.2
      thresh= 1.143E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.971E-16

      iter #   9 total cpu time :   782.7 secs   av.it.:   9.0
      thresh= 1.404E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.364E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :   785.8 secs   av.it.:   5.8
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.342E-06

      iter #   2 total cpu time :   790.8 secs   av.it.:   8.7
      thresh= 1.158E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.775E-08

      iter #   3 total cpu time :   793.6 secs   av.it.:   9.0
      thresh= 2.788E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.112E-09

      iter #   4 total cpu time :   806.5 secs   av.it.:   8.2
      thresh= 3.335E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.448E-13

      iter #   5 total cpu time :   812.0 secs   av.it.:   8.2
      thresh= 9.720E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.023E-14

      iter #   6 total cpu time :   815.4 secs   av.it.:   8.1
      thresh= 1.422E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.194E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.625000000  -0.125000000   0.625000000
          2   0.625000000  -0.125000000  -0.625000000
          3  -0.625000000  -0.125000000   0.625000000
          4  -0.625000000  -0.125000000  -0.625000000
          5  -0.625000000   0.125000000  -0.625000000
          6  -0.625000000   0.125000000   0.625000000
          7   0.625000000   0.125000000   0.625000000
          8  -0.625000000  -0.625000000   0.125000000
          9   0.625000000   0.125000000  -0.625000000
         10  -0.125000000   0.625000000   0.625000000
         11   0.125000000   0.625000000  -0.625000000
         12  -0.125000000  -0.625000000  -0.625000000
         13  -0.125000000   0.625000000  -0.625000000
         14   0.625000000   0.625000000  -0.125000000
         15   0.625000000  -0.625000000   0.125000000
         16  -0.625000000  -0.625000000  -0.125000000
         17  -0.625000000   0.625000000   0.125000000
         18   0.125000000  -0.625000000   0.625000000
         19  -0.625000000   0.625000000  -0.125000000
         20   0.125000000   0.625000000   0.625000000
         21  -0.125000000  -0.625000000   0.625000000
         22   0.625000000   0.625000000   0.125000000
         23   0.125000000  -0.625000000  -0.625000000
         24   0.625000000  -0.625000000  -0.125000000

     Diagonalizing the dynamical matrix

     q = (    0.625000000  -0.125000000   0.625000000 ) 

 **************************************************************************
     freq (    1) =       4.950091 [THz] =     165.117275 [cm-1]
     freq (    2) =       9.972006 [THz] =     332.630311 [cm-1]
     freq (    3) =      12.000114 [THz] =     400.280720 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        165.1  [cm-1]   --> A''                
     freq (  2 -  2) =        332.6  [cm-1]   --> A'                 
     freq (  3 -  3) =        400.3  [cm-1]   --> A'                 

     Calculation of q =    0.5000000   0.0000000   0.5000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19195     6735    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      144.8 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.5000000   0.0000000   0.5000000 )
 
      4 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_2v (mm2)  point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A_1  D_1  S_1  To be done

     Representation     2      1 modes -B_1  D_3  S_3  To be done

     Representation     3      1 modes -B_2  D_4  S_4  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 11m53.11s CPU    14m 0.50s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   841.9 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.447E-05

      iter #   2 total cpu time :   845.6 secs   av.it.:   8.6
      thresh= 6.668E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.550E-05

      iter #   3 total cpu time :   849.0 secs   av.it.:   7.4
      thresh= 9.247E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.300E-08

      iter #   4 total cpu time :   855.8 secs   av.it.:   8.8
      thresh= 2.074E-05 alpha_mix =  0.700 |ddv_scf|^2 =  8.684E-10

      iter #   5 total cpu time :   859.9 secs   av.it.:   9.0
      thresh= 2.947E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.118E-12

      iter #   6 total cpu time :   863.7 secs   av.it.:   9.1
      thresh= 1.766E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.535E-13

      iter #   7 total cpu time :   870.3 secs   av.it.:   9.4
      thresh= 3.918E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.829E-16

      iter #   8 total cpu time :   873.3 secs   av.it.:   9.5
      thresh= 2.197E-09 alpha_mix =  0.700 |ddv_scf|^2 =  4.096E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :   876.9 secs   av.it.:   5.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.267E-06

      iter #   2 total cpu time :   880.2 secs   av.it.:   8.7
      thresh= 1.126E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.518E-08

      iter #   3 total cpu time :   882.9 secs   av.it.:   9.0
      thresh= 2.742E-05 alpha_mix =  0.700 |ddv_scf|^2 =  6.295E-10

      iter #   4 total cpu time :   884.3 secs   av.it.:   8.4
      thresh= 2.509E-06 alpha_mix =  0.700 |ddv_scf|^2 =  8.793E-13

      iter #   5 total cpu time :   885.7 secs   av.it.:   8.4
      thresh= 9.377E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.944E-14

      iter #   6 total cpu time :   888.0 secs   av.it.:   7.6
      thresh= 1.394E-08 alpha_mix =  0.700 |ddv_scf|^2 =  9.555E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :   891.7 secs   av.it.:   6.2
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  2.200E-06

      iter #   2 total cpu time :   893.7 secs   av.it.:   8.8
      thresh= 1.483E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.715E-08

      iter #   3 total cpu time :   902.8 secs   av.it.:   8.6
      thresh= 2.778E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.435E-09

      iter #   4 total cpu time :   905.1 secs   av.it.:   8.6
      thresh= 6.660E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.447E-12

      iter #   5 total cpu time :   908.3 secs   av.it.:   8.4
      thresh= 2.109E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.075E-14

      iter #   6 total cpu time :   910.3 secs   av.it.:   8.2
      thresh= 1.037E-08 alpha_mix =  0.700 |ddv_scf|^2 =  6.232E-16

      iter #   7 total cpu time :   912.6 secs   av.it.:   8.4
      thresh= 2.496E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.688E-19

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   12
     List of q in the star:
          1   0.500000000   0.000000000   0.500000000
          2   0.500000000   0.000000000  -0.500000000
          3  -0.500000000   0.000000000  -0.500000000
          4  -0.500000000   0.000000000   0.500000000
          5  -0.500000000  -0.500000000   0.000000000
          6   0.000000000   0.500000000   0.500000000
          7   0.000000000   0.500000000  -0.500000000
          8   0.000000000  -0.500000000  -0.500000000
          9   0.500000000   0.500000000   0.000000000
         10   0.500000000  -0.500000000   0.000000000
         11  -0.500000000   0.500000000   0.000000000
         12   0.000000000  -0.500000000   0.500000000

     Diagonalizing the dynamical matrix

     q = (    0.500000000   0.000000000   0.500000000 ) 

 **************************************************************************
     freq (    1) =       4.205608 [THz] =     140.283978 [cm-1]
     freq (    2) =       9.740298 [THz] =     324.901358 [cm-1]
     freq (    3) =      10.588782 [THz] =     353.203762 [cm-1]
 **************************************************************************

     Mode symmetry, C_2v (mm2)  point group:

     freq (  1 -  1) =        140.3  [cm-1]   --> B_1  D_3  S_3      
     freq (  2 -  2) =        324.9  [cm-1]   --> B_2  D_4  S_4      
     freq (  3 -  3) =        353.2  [cm-1]   --> A_1  D_1  S_1      

     Calculation of q =    0.0000000   0.7500000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    187                19195     6735    1639
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      157.1 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000   0.7500000   0.0000000 )
 
      8 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 22736  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_4v (4mm)  point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_1  G_1 D_1  To be done

     Representation     2      2 modes -E    G_5 D_5  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 13m11.05s CPU    15m27.24s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :   928.1 secs   av.it.:   6.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.292E-05

      iter #   2 total cpu time :   931.2 secs   av.it.:   8.6
      thresh= 5.738E-04 alpha_mix =  0.700 |ddv_scf|^2 =  5.061E-05

      iter #   3 total cpu time :   933.0 secs   av.it.:   7.6
      thresh= 7.114E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.382E-08

      iter #   4 total cpu time :   936.7 secs   av.it.:   8.8
      thresh= 1.839E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.201E-09

      iter #   5 total cpu time :   952.0 secs   av.it.:   8.8
      thresh= 3.466E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.844E-12

      iter #   6 total cpu time :   962.7 secs   av.it.:   9.0
      thresh= 1.686E-07 alpha_mix =  0.700 |ddv_scf|^2 =  9.179E-14

      iter #   7 total cpu time :   974.5 secs   av.it.:   9.0
      thresh= 3.030E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.167E-16

      iter #   8 total cpu time :   976.5 secs   av.it.:   8.9
      thresh= 2.041E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.894E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :   983.7 secs   av.it.:   6.0
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.760E-07

      iter #   2 total cpu time :   985.5 secs   av.it.:   9.5
      thresh= 6.132E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.998E-08

      iter #   3 total cpu time :   988.6 secs   av.it.:   9.7
      thresh= 1.414E-05 alpha_mix =  0.700 |ddv_scf|^2 =  4.854E-10

      iter #   4 total cpu time :   990.3 secs   av.it.:   8.6
      thresh= 2.203E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.987E-13

      iter #   5 total cpu time :   991.9 secs   av.it.:   9.0
      thresh= 4.457E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.640E-15

      iter #   6 total cpu time :   994.3 secs   av.it.:   9.1
      thresh= 6.811E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.850E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    6
     List of q in the star:
          1   0.000000000   0.750000000   0.000000000
          2   0.000000000  -0.750000000   0.000000000
          3   0.000000000   0.000000000  -0.750000000
          4   0.750000000   0.000000000   0.000000000
          5  -0.750000000   0.000000000   0.000000000
          6   0.000000000   0.000000000   0.750000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000   0.750000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       7.379247 [THz] =     246.145188 [cm-1]
     freq (    2) =       7.379247 [THz] =     246.145188 [cm-1]
     freq (    3) =      11.992358 [THz] =     400.021998 [cm-1]
 **************************************************************************

     Mode symmetry, C_4v (4mm)  point group:

     freq (  1 -  2) =        246.1  [cm-1]   --> E    G_5 D_5       
     freq (  3 -  3) =        400.0  [cm-1]   --> A_1  G_1 D_1       

     Calculation of q =    0.8750000  -0.1250000   0.8750000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19195     6735    1837
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     877,    6)
        NL pseudopotentials             0.12 Mb     (     877,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     877,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.8

     total cpu time spent up to now is      181.7 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.8750000  -0.1250000   0.8750000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 89376  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 14m36.22s CPU    17m35.12s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1057.9 secs   av.it.:   6.6
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.007E-05

      iter #   2 total cpu time :  1062.1 secs   av.it.:   8.8
      thresh= 3.174E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.039E-06

      iter #   3 total cpu time :  1067.2 secs   av.it.:   8.0
      thresh= 1.743E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.343E-08

      iter #   4 total cpu time :  1071.5 secs   av.it.:   8.9
      thresh= 1.531E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.012E-09

      iter #   5 total cpu time :  1083.5 secs   av.it.:   8.9
      thresh= 3.181E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.394E-12

      iter #   6 total cpu time :  1094.6 secs   av.it.:   9.1
      thresh= 2.096E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.038E-13

      iter #   7 total cpu time :  1097.5 secs   av.it.:   9.1
      thresh= 3.222E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.959E-15

      iter #   8 total cpu time :  1119.7 secs   av.it.:   8.9
      thresh= 5.440E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.503E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1128.4 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.008E-06

      iter #   2 total cpu time :  1131.7 secs   av.it.:   9.0
      thresh= 1.734E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.277E-07

      iter #   3 total cpu time :  1152.1 secs   av.it.:   8.8
      thresh= 6.540E-05 alpha_mix =  0.700 |ddv_scf|^2 =  3.715E-08

      iter #   4 total cpu time :  1169.5 secs   av.it.:   8.9
      thresh= 1.927E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.002E-09

      iter #   5 total cpu time :  1180.7 secs   av.it.:   8.9
      thresh= 3.165E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.163E-12

      iter #   6 total cpu time :  1189.6 secs   av.it.:   9.0
      thresh= 3.027E-07 alpha_mix =  0.700 |ddv_scf|^2 =  3.235E-13

      iter #   7 total cpu time :  1193.7 secs   av.it.:   9.0
      thresh= 5.688E-08 alpha_mix =  0.700 |ddv_scf|^2 =  2.985E-15

      iter #   8 total cpu time :  1197.1 secs   av.it.:   9.1
      thresh= 5.464E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.303E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1203.4 secs   av.it.:   5.9
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.523E-06

      iter #   2 total cpu time :  1207.4 secs   av.it.:   8.6
      thresh= 1.234E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.054E-08

      iter #   3 total cpu time :  1211.3 secs   av.it.:   8.9
      thresh= 2.838E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.084E-09

      iter #   4 total cpu time :  1215.6 secs   av.it.:   7.5
      thresh= 4.565E-06 alpha_mix =  0.700 |ddv_scf|^2 =  8.426E-13

      iter #   5 total cpu time :  1219.3 secs   av.it.:   8.5
      thresh= 9.179E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.816E-14

      iter #   6 total cpu time :  1223.3 secs   av.it.:   8.4
      thresh= 1.348E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.315E-17

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1   0.875000000  -0.125000000   0.875000000
          2   0.875000000  -0.125000000  -0.875000000
          3  -0.875000000  -0.125000000  -0.875000000
          4  -0.875000000  -0.125000000   0.875000000
          5  -0.875000000   0.125000000  -0.875000000
          6  -0.875000000   0.125000000   0.875000000
          7   0.875000000   0.125000000   0.875000000
          8  -0.875000000  -0.875000000   0.125000000
          9   0.875000000   0.125000000  -0.875000000
         10  -0.125000000   0.875000000   0.875000000
         11   0.125000000   0.875000000  -0.875000000
         12  -0.125000000  -0.875000000  -0.875000000
         13  -0.125000000   0.875000000  -0.875000000
         14   0.875000000   0.875000000  -0.125000000
         15   0.875000000  -0.875000000   0.125000000
         16  -0.875000000  -0.875000000  -0.125000000
         17  -0.875000000   0.875000000   0.125000000
         18   0.125000000  -0.875000000   0.875000000
         19  -0.875000000   0.875000000  -0.125000000
         20   0.125000000   0.875000000   0.875000000
         21  -0.125000000  -0.875000000   0.875000000
         22   0.875000000   0.875000000   0.125000000
         23   0.125000000  -0.875000000  -0.875000000
         24   0.875000000  -0.875000000  -0.125000000

     Diagonalizing the dynamical matrix

     q = (    0.875000000  -0.125000000   0.875000000 ) 

 **************************************************************************
     freq (    1) =       7.527705 [THz] =     251.097200 [cm-1]
     freq (    2) =       9.015745 [THz] =     300.732889 [cm-1]
     freq (    3) =      12.928651 [THz] =     431.253380 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        251.1  [cm-1]   --> A''                
     freq (  2 -  2) =        300.7  [cm-1]   --> A'                 
     freq (  3 -  3) =        431.3  [cm-1]   --> A'                 

     Calculation of q =    0.7500000   0.0000000   0.7500000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19195     6735    1807
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.9

     total cpu time spent up to now is      208.2 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.7500000   0.0000000   0.7500000 )
 
      4 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 44688  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_2v (mm2)  point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A_1  D_1  S_1  To be done

     Representation     2      1 modes -B_1  D_3  S_3  To be done

     Representation     3      1 modes -B_2  D_4  S_4  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 17m50.76s CPU    21m19.84s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1281.2 secs   av.it.:   6.3
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  4.171E-06

      iter #   2 total cpu time :  1294.1 secs   av.it.:   8.8
      thresh= 2.042E-04 alpha_mix =  0.700 |ddv_scf|^2 =  2.337E-07

      iter #   3 total cpu time :  1302.1 secs   av.it.:   8.2
      thresh= 4.835E-05 alpha_mix =  0.700 |ddv_scf|^2 =  9.966E-09

      iter #   4 total cpu time :  1303.9 secs   av.it.:   8.8
      thresh= 9.983E-06 alpha_mix =  0.700 |ddv_scf|^2 =  4.634E-11

      iter #   5 total cpu time :  1305.4 secs   av.it.:   8.7
      thresh= 6.807E-07 alpha_mix =  0.700 |ddv_scf|^2 =  3.202E-12

      iter #   6 total cpu time :  1307.6 secs   av.it.:   8.9
      thresh= 1.789E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.407E-14

      iter #   7 total cpu time :  1322.7 secs   av.it.:   9.4
      thresh= 1.186E-08 alpha_mix =  0.700 |ddv_scf|^2 =  9.912E-16

      iter #   8 total cpu time :  1326.4 secs   av.it.:   9.4
      thresh= 3.148E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.765E-18

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1329.5 secs   av.it.:   5.9
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.451E-06

      iter #   2 total cpu time :  1330.9 secs   av.it.:   8.6
      thresh= 1.205E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.007E-08

      iter #   3 total cpu time :  1334.8 secs   av.it.:   8.9
      thresh= 2.830E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.809E-09

      iter #   4 total cpu time :  1337.2 secs   av.it.:   7.5
      thresh= 4.253E-06 alpha_mix =  0.700 |ddv_scf|^2 =  9.355E-13

      iter #   5 total cpu time :  1340.3 secs   av.it.:   8.5
      thresh= 9.672E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.963E-14

      iter #   6 total cpu time :  1342.6 secs   av.it.:   8.3
      thresh= 1.401E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.778E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1345.4 secs   av.it.:   6.4
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  5.433E-06

      iter #   2 total cpu time :  1347.9 secs   av.it.:   8.8
      thresh= 2.331E-04 alpha_mix =  0.700 |ddv_scf|^2 =  3.031E-07

      iter #   3 total cpu time :  1351.3 secs   av.it.:   8.2
      thresh= 5.506E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.149E-08

      iter #   4 total cpu time :  1354.9 secs   av.it.:   8.6
      thresh= 1.072E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.396E-12

      iter #   5 total cpu time :  1357.3 secs   av.it.:   8.8
      thresh= 2.323E-07 alpha_mix =  0.700 |ddv_scf|^2 =  4.384E-14

      iter #   6 total cpu time :  1360.3 secs   av.it.:   8.2
      thresh= 2.094E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.128E-15

      iter #   7 total cpu time :  1362.2 secs   av.it.:   8.4
      thresh= 3.359E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.118E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   12
     List of q in the star:
          1   0.750000000   0.000000000   0.750000000
          2  -0.750000000   0.000000000   0.750000000
          3  -0.750000000   0.000000000  -0.750000000
          4   0.750000000   0.000000000  -0.750000000
          5  -0.750000000  -0.750000000   0.000000000
          6   0.000000000   0.750000000   0.750000000
          7   0.000000000   0.750000000  -0.750000000
          8   0.000000000  -0.750000000  -0.750000000
          9   0.750000000   0.750000000   0.000000000
         10   0.750000000  -0.750000000   0.000000000
         11  -0.750000000   0.750000000   0.000000000
         12   0.000000000  -0.750000000   0.750000000

     Diagonalizing the dynamical matrix

     q = (    0.750000000   0.000000000   0.750000000 ) 

 **************************************************************************
     freq (    1) =       6.449253 [THz] =     215.123934 [cm-1]
     freq (    2) =      10.496142 [THz] =     350.113624 [cm-1]
     freq (    3) =      12.583472 [THz] =     419.739429 [cm-1]
 **************************************************************************

     Mode symmetry, C_2v (mm2)  point group:

     freq (  1 -  1) =        215.1  [cm-1]   --> B_1  D_3  S_3      
     freq (  2 -  2) =        350.1  [cm-1]   --> A_1  D_1  S_1      
     freq (  3 -  3) =        419.7  [cm-1]   --> B_2  D_4  S_4      

     Calculation of q =    0.0000000  -1.0000000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    199                19195     6735    1759
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 11368  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.8

     total cpu time spent up to now is      222.0 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (   0.0000000  -1.0000000   0.0000000 )
 
     17 Sym.Ops. (with q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 11368  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, D_4h(4/mmm) point group:


     Atomic displacements:
     There are   2 irreducible representations

     Representation     1      1 modes -A_2u X_4' M_4'  To be done

     Representation     2      2 modes -E_u  X_5' M_5'  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 19m14.86s CPU    22m50.43s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1370.9 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  8.429E-06

      iter #   2 total cpu time :  1373.9 secs   av.it.:   8.7
      thresh= 2.903E-04 alpha_mix =  0.700 |ddv_scf|^2 =  8.422E-07

      iter #   3 total cpu time :  1374.7 secs   av.it.:   8.0
      thresh= 9.177E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.480E-08

      iter #   4 total cpu time :  1375.2 secs   av.it.:   8.7
      thresh= 1.216E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.076E-12

      iter #   5 total cpu time :  1377.1 secs   av.it.:   8.6
      thresh= 2.253E-07 alpha_mix =  0.700 |ddv_scf|^2 =  1.211E-13

      iter #   6 total cpu time :  1377.7 secs   av.it.:   8.7
      thresh= 3.480E-08 alpha_mix =  0.700 |ddv_scf|^2 =  7.165E-16

      iter #   7 total cpu time :  1385.2 secs   av.it.:   8.5
      thresh= 2.677E-09 alpha_mix =  0.700 |ddv_scf|^2 =  7.955E-19

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 modes #   2  3

     Self-consistent Calculation

      iter #   1 total cpu time :  1396.5 secs   av.it.:   6.1
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  3.940E-07

      iter #   2 total cpu time :  1400.3 secs   av.it.:   9.4
      thresh= 6.277E-05 alpha_mix =  0.700 |ddv_scf|^2 =  2.023E-08

      iter #   3 total cpu time :  1401.5 secs   av.it.:   9.6
      thresh= 1.422E-05 alpha_mix =  0.700 |ddv_scf|^2 =  5.751E-10

      iter #   4 total cpu time :  1406.4 secs   av.it.:   8.6
      thresh= 2.398E-06 alpha_mix =  0.700 |ddv_scf|^2 =  1.989E-13

      iter #   5 total cpu time :  1408.0 secs   av.it.:   9.0
      thresh= 4.460E-08 alpha_mix =  0.700 |ddv_scf|^2 =  4.402E-15

      iter #   6 total cpu time :  1409.1 secs   av.it.:   9.0
      thresh= 6.635E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.919E-18

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =    3
     List of q in the star:
          1   0.000000000  -1.000000000   0.000000000
          2  -1.000000000   0.000000000   0.000000000
          3   0.000000000   0.000000000  -1.000000000

     Diagonalizing the dynamical matrix

     q = (    0.000000000  -1.000000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       8.144465 [THz] =     271.670119 [cm-1]
     freq (    2) =       8.144465 [THz] =     271.670119 [cm-1]
     freq (    3) =      13.517050 [THz] =     450.880255 [cm-1]
 **************************************************************************

     Mode symmetry, D_4h(4/mmm) point group:

     freq (  1 -  2) =        271.7  [cm-1]   --> E_u  X_5' M_5'     
     freq (  3 -  3) =        450.9  [cm-1]   --> A_2u X_4' M_4'     

     Calculation of q =   -0.2500000   0.5000000   0.0000000
 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         955     475    169                19195     6735    1471
 


     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     number of electrons       =         3.00
     number of Kohn-Sham states=            6
     kinetic-energy cutoff     =      60.0000  Ry
     charge density cutoff     =     480.0000  Ry
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)

     celldm(1)=   7.548066  celldm(2)=   0.000000  celldm(3)=   0.000000
     celldm(4)=   0.000000  celldm(5)=   0.000000  celldm(6)=   0.000000

     crystal axes: (cart. coord. in units of alat)
               a(1) = (  -0.500000   0.000000   0.500000 )  
               a(2) = (   0.000000   0.500000   0.500000 )  
               a(3) = (  -0.500000   0.500000   0.000000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.000000 -1.000000  1.000000 )  
               b(2) = (  1.000000  1.000000  1.000000 )  
               b(3) = ( -1.000000  1.000000 -1.000000 )  


     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     atomic species   valence    mass     pseudopotential
        Li             3.00     6.94100     Li( 1.00)

     48 Sym. Ops., with inversion, found



   Cartesian axes

     site n.     atom                  positions (alat units)
         1           Li  tau(   1) = (   0.0000000   0.0000000   0.0000000  )

     number of k points= 87808  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     Number of k-points >= 100: set verbosity='high' to print them.

     Dense  grid:    19195 G-vectors     FFT dimensions: (  40,  40,  40)

     Smooth grid:     6735 G-vectors     FFT dimensions: (  27,  27,  27)

     Largest allocated arrays     est. size (Mb)     dimensions
        Kohn-Sham Wavefunctions         0.08 Mb     (     876,    6)
        NL pseudopotentials             0.12 Mb     (     876,    9)
        Each V/rho on FFT grid          0.98 Mb     (   64000)
        Each G-vector array             0.15 Mb     (   19195)
        G-vector shells                 0.00 Mb     (     234)
     Largest temporary arrays     est. size (Mb)     dimensions
        Auxiliary wavefunctions         0.32 Mb     (     876,   24)
        Each subspace H/S matrix        0.01 Mb     (      24,   24)
        Each <psi_i|beta_j> matrix      0.00 Mb     (       9,    6)

     The potential is recalculated from file :
     ./tmp/_ph0/li-fcc.save/charge-density.dat

     Starting wfc are    5 atomic +    1 random wfc

     Band Structure Calculation
     Davidson diagonalization with overlap

     ethr =  3.33E-10,  avg # of iterations = 14.8

     total cpu time spent up to now is      244.4 secs

     End of band structure calculation

     Number of k-points >= 100: set verbosity='high' to print the bands.

     the Fermi energy is     1.7700 ev

                                                                                

     bravais-lattice index     =            2
     lattice parameter (alat)  =       7.5481  a.u.
     unit-cell volume          =     107.5096 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     480.0000  Ry
     convergence threshold     =      1.0E-16
     beta                      =       0.7000
     number of iterations used =            4
     Exchange-correlation      =  SLA  PW   PBX  PBC ( 1  4  3  4 0 0)


     celldm(1)=    7.54807  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of alat)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/alat)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

     Cartesian axes

     site n.  atom      mass           positions (alat units)
        1     Li   6.9410   tau(    1) = (    0.00000    0.00000    0.00000  )

     Computing dynamical matrix for 
                    q = (  -0.2500000   0.5000000   0.0000000 )
 
      2 Sym.Ops. (no q -> -q+G )


     G cutoff =  692.7123  (  19195 G-vectors)     FFT grid: ( 40, 40, 40)
     G cutoff =  346.3561  (   6735 G-vectors)  smooth grid: ( 27, 27, 27)

     number of k points= 87808  Marzari-Vanderbilt smearing, width (Ry)=  0.0200

     PseudoPot. # 1 for Li read from file:
     ../Li.pbe-s-gbrv14.UPF
     MD5 check sum: 7ca33c4f951f001da2db5c8738379802
     Pseudo is Ultrasoft, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  751 points,  5 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   0
                l(4) =   1
                l(5) =   1
     Q(r) pseudized with 10 coefficients,  rinner =    1.150   1.150   1.150


     Mode symmetry, C_s (m)     point group:


     Atomic displacements:
     There are   3 irreducible representations

     Representation     1      1 modes -A'  To be done

     Representation     2      1 modes -A'  To be done

     Representation     3      1 modes -A''  To be done



     Alpha used in Ewald sum =   2.8000
     PHONON       : 20m16.52s CPU    24m13.08s WALL



     Representation #  1 mode #   1

     Self-consistent Calculation

      iter #   1 total cpu time :  1455.8 secs   av.it.:   6.5
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.739E-04

      iter #   2 total cpu time :  1463.3 secs   av.it.:   8.1
      thresh= 1.319E-03 alpha_mix =  0.700 |ddv_scf|^2 =  1.552E-03

      iter #   3 total cpu time :  1468.2 secs   av.it.:   6.6
      thresh= 3.940E-03 alpha_mix =  0.700 |ddv_scf|^2 =  8.573E-08

      iter #   4 total cpu time :  1472.7 secs   av.it.:   9.0
      thresh= 2.928E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.167E-09

      iter #   5 total cpu time :  1477.3 secs   av.it.:   9.1
      thresh= 3.416E-06 alpha_mix =  0.700 |ddv_scf|^2 =  5.612E-11

      iter #   6 total cpu time :  1495.3 secs   av.it.:   8.6
      thresh= 7.491E-07 alpha_mix =  0.700 |ddv_scf|^2 =  2.254E-13

      iter #   7 total cpu time :  1501.4 secs   av.it.:   9.6
      thresh= 4.748E-08 alpha_mix =  0.700 |ddv_scf|^2 =  3.472E-15

      iter #   8 total cpu time :  1505.1 secs   av.it.:   8.8
      thresh= 5.892E-09 alpha_mix =  0.700 |ddv_scf|^2 =  1.690E-14

      iter #   9 total cpu time :  1507.6 secs   av.it.:   7.0
      thresh= 1.300E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.533E-16

      iter #  10 total cpu time :  1510.8 secs   av.it.:   8.8
      thresh= 1.238E-09 alpha_mix =  0.700 |ddv_scf|^2 =  5.074E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  2 mode #   2

     Self-consistent Calculation

      iter #   1 total cpu time :  1515.4 secs   av.it.:   6.3
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  5.268E-05

      iter #   2 total cpu time :  1518.5 secs   av.it.:   8.3
      thresh= 7.258E-04 alpha_mix =  0.700 |ddv_scf|^2 =  4.615E-04

      iter #   3 total cpu time :  1520.9 secs   av.it.:   6.6
      thresh= 2.148E-03 alpha_mix =  0.700 |ddv_scf|^2 =  5.058E-08

      iter #   4 total cpu time :  1526.7 secs   av.it.:   9.2
      thresh= 2.249E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.371E-09

      iter #   5 total cpu time :  1530.4 secs   av.it.:   8.8
      thresh= 3.703E-06 alpha_mix =  0.700 |ddv_scf|^2 =  2.354E-11

      iter #   6 total cpu time :  1533.5 secs   av.it.:   8.8
      thresh= 4.852E-07 alpha_mix =  0.700 |ddv_scf|^2 =  4.597E-13

      iter #   7 total cpu time :  1536.4 secs   av.it.:   9.1
      thresh= 6.780E-08 alpha_mix =  0.700 |ddv_scf|^2 =  1.399E-13

      iter #   8 total cpu time :  1539.6 secs   av.it.:   7.0
      thresh= 3.741E-08 alpha_mix =  0.700 |ddv_scf|^2 =  6.440E-15

      iter #   9 total cpu time :  1542.8 secs   av.it.:   8.6
      thresh= 8.025E-09 alpha_mix =  0.700 |ddv_scf|^2 =  3.057E-15

      iter #  10 total cpu time :  1546.7 secs   av.it.:   7.4
      thresh= 5.529E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.281E-17

     End of self-consistent calculation

     Convergence has been achieved 


     Representation #  3 mode #   3

     Self-consistent Calculation

      iter #   1 total cpu time :  1550.5 secs   av.it.:   6.0
      thresh= 1.000E-02 alpha_mix =  0.700 |ddv_scf|^2 =  1.544E-06

      iter #   2 total cpu time :  1553.5 secs   av.it.:   8.8
      thresh= 1.243E-04 alpha_mix =  0.700 |ddv_scf|^2 =  7.567E-08

      iter #   3 total cpu time :  1556.4 secs   av.it.:   8.9
      thresh= 2.751E-05 alpha_mix =  0.700 |ddv_scf|^2 =  1.936E-09

      iter #   4 total cpu time :  1559.8 secs   av.it.:   8.5
      thresh= 4.400E-06 alpha_mix =  0.700 |ddv_scf|^2 =  3.444E-12

      iter #   5 total cpu time :  1563.4 secs   av.it.:   8.7
      thresh= 1.856E-07 alpha_mix =  0.700 |ddv_scf|^2 =  8.383E-15

      iter #   6 total cpu time :  1567.1 secs   av.it.:   8.1
      thresh= 9.156E-09 alpha_mix =  0.700 |ddv_scf|^2 =  2.834E-16

      iter #   7 total cpu time :  1571.3 secs   av.it.:   8.2
      thresh= 1.684E-09 alpha_mix =  0.700 |ddv_scf|^2 =  6.864E-20

     End of self-consistent calculation

     Convergence has been achieved 
 
     Number of q in the star =   24
     List of q in the star:
          1  -0.250000000   0.500000000   0.000000000
          2   0.000000000  -0.500000000  -0.250000000
          3  -0.250000000  -0.500000000   0.000000000
          4   0.250000000   0.500000000   0.000000000
          5   0.000000000   0.500000000   0.250000000
          6   0.000000000   0.500000000  -0.250000000
          7   0.250000000  -0.500000000   0.000000000
          8   0.000000000  -0.500000000   0.250000000
          9   0.500000000   0.000000000  -0.250000000
         10  -0.500000000   0.000000000   0.250000000
         11   0.500000000   0.000000000   0.250000000
         12   0.500000000  -0.250000000   0.000000000
         13   0.000000000  -0.250000000   0.500000000
         14   0.000000000   0.250000000  -0.500000000
         15   0.000000000   0.250000000   0.500000000
         16   0.000000000  -0.250000000  -0.500000000
         17  -0.500000000   0.250000000   0.000000000
         18  -0.500000000   0.000000000  -0.250000000
         19  -0.500000000  -0.250000000   0.000000000
         20   0.500000000   0.250000000   0.000000000
         21  -0.250000000   0.000000000  -0.500000000
         22   0.250000000   0.000000000   0.500000000
         23  -0.250000000   0.000000000   0.500000000
         24   0.250000000   0.000000000  -0.500000000

     Diagonalizing the dynamical matrix

     q = (   -0.250000000   0.500000000   0.000000000 ) 

 **************************************************************************
     freq (    1) =       4.516004 [THz] =     150.637682 [cm-1]
     freq (    2) =       7.364697 [THz] =     245.659834 [cm-1]
     freq (    3) =       9.172649 [THz] =     305.966630 [cm-1]
 **************************************************************************

     Mode symmetry, C_s (m)     point group:

     freq (  1 -  1) =        150.6  [cm-1]   --> A'                 
     freq (  2 -  2) =        245.7  [cm-1]   --> A''                
     freq (  3 -  3) =        306.0  [cm-1]   --> A'                 

     Calculation of q =    0.6250000  -0.3750000   0.8750000

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     stopping ...






 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points

     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points

     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (8     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     stopping ...
     too many k points
     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     too many k points
     stopping ...
     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):


     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):


     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points

     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  stopping ...
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...





 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%





 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):


     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):


     too many k points



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopp

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...





 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     stopping ...





 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     too many k points
     too many k points
     stopping ...

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%

     stopping ...



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 7808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...


     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     stopping ...
     stop
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

     stopping ...
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points


     stopping ...

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...

     stopping ...
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
       stopping ...




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):


     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     too many k points
     Error in routine set_kplusq (87808):
     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
     stopping ...

     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     too many k points
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%     Error in routine set_kplusq (87808):
     too many k points

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     too many k points
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%





 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     too many k points
     too many k points

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ing ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     stopping ...
     Error  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%

     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     Error in routine set_kplusq (87808):

     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     stopping ...

     too many k points
     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):

     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%ping ...
     stopping ...

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     too many k points

     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):

     stopping ...
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points
     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...


     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...

     stopping ...
     stopping ...



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):

     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     stopping ...

     stopping ...
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):

     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points

     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):
     stopping ...
     too many k points
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):


     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     Error in routine set_kplusq (87808):
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):


     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     stopping ...
     stopping ...
     stopping ...


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     Error in routine set_kplusq (87808):

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     too many k points
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...


     stopping ...
     too many k points
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     stopping ...

     too many k points

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...



 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



     too many k points
     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     stopping ...
     stopping ...

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     too many k points

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):

     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     stopping ...
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many  in routine set_kplusq (87808):
     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points

     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...

     stopping ...

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...
     Error in routine set_kplusq (87808):
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     stopping ...
     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):
     too many k points
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     stopping ...

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):

     too many k points
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     Error in routine set_kplusq (87808):

     too many k points
     Error in routine set_kplusq (87808):
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     Error in routine set_kplusq (87808):
     stopping ...
     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     stopping ...
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Error in routine set_kplusq (87808):
     too many k points
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

     stopping ...
Application 21911379 exit codes: 134
Application 21911379 exit signals: Killed
Application 21911379 resources: utime ~1502s, stime ~25s, Rss ~179000, inblocks ~1187527, outblocks ~2577022
